{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport invariant from 'fbjs/lib/invariant';\n\nfunction createStrictShapeTypeChecker(shapeTypes) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(false, \"Required object `\" + propName + \"` was not specified in `\" + componentName + \"`.\");\n      }\n\n      return;\n    }\n\n    var propValue = props[propName];\n    var propType = typeof propValue;\n    var locationName = location || '(unknown)';\n\n    if (propType !== 'object') {\n      invariant(false, \"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `object`.\"));\n    }\n\n    var allKeys = _objectSpread({}, props[propName], shapeTypes);\n\n    for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    for (var _key2 in allKeys) {\n      var checker = shapeTypes[_key2];\n\n      if (!checker) {\n        invariant(false, \"Invalid props.\" + propName + \" key `\" + _key2 + \"` supplied to `\" + componentName + \"`.\" + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n      }\n\n      var error = checker.apply(void 0, [propValue, _key2, componentName, location].concat(rest));\n\n      if (error) {\n        invariant(false, error.message + '\\nBad object: ' + JSON.stringify(props[propName], null, '  '));\n      }\n    }\n  }\n\n  function chainedCheckType(props, propName, componentName, location) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {\n      rest[_key3 - 4] = arguments[_key3];\n    }\n\n    return checkType.apply(void 0, [false, props, propName, componentName, location].concat(rest));\n  }\n\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nexport default createStrictShapeTypeChecker;","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-web/dist/modules/createStrictShapeTypeChecker/index.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","invariant","createStrictShapeTypeChecker","shapeTypes","checkType","isRequired","props","propName","componentName","location","propValue","propType","locationName","allKeys","_len","rest","Array","_key","_key2","checker","JSON","stringify","error","apply","message","chainedCheckType","_len2","_key3","bind"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\n\nfunction createStrictShapeTypeChecker(shapeTypes) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(false, \"Required object `\" + propName + \"` was not specified in `\" + componentName + \"`.\");\n      }\n\n      return;\n    }\n\n    var propValue = props[propName];\n    var propType = typeof propValue;\n    var locationName = location || '(unknown)';\n\n    if (propType !== 'object') {\n      invariant(false, \"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `object`.\"));\n    } // We need to check all keys in case some are required but missing from\n    // props.\n\n\n    var allKeys = _objectSpread({}, props[propName], shapeTypes);\n\n    for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    for (var _key2 in allKeys) {\n      var checker = shapeTypes[_key2];\n\n      if (!checker) {\n        invariant(false, \"Invalid props.\" + propName + \" key `\" + _key2 + \"` supplied to `\" + componentName + \"`.\" + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n      }\n\n      var error = checker.apply(void 0, [propValue, _key2, componentName, location].concat(rest));\n\n      if (error) {\n        invariant(false, error.message + '\\nBad object: ' + JSON.stringify(props[propName], null, '  '));\n      }\n    }\n  }\n\n  function chainedCheckType(props, propName, componentName, location) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {\n      rest[_key3 - 4] = arguments[_key3];\n    }\n\n    return checkType.apply(void 0, [false, props, propName, componentName, location].concat(rest));\n  }\n\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nexport default createStrictShapeTypeChecker;"]},"metadata":{},"sourceType":"module"}
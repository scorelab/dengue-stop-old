{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"./Easing\";\nimport AnimatedClock from \"./core/AnimatedClock\";\nimport AnimatedValue from \"./core/AnimatedValue\";\nimport AnimatedNode from \"./core/AnimatedNode\";\nimport AnimatedCode from \"./core/AnimatedCode\";\nimport * as base from \"./base\";\nimport * as derived from \"./derived\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport decay from \"./animations/decay\";\nimport timing from \"./animations/timing\";\nimport spring from \"./animations/spring\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport { addWhitelistedNativeProps, addWhitelistedUIProps } from \"./ConfigHelper\";\nimport backwardCompatibleAnimWrapper from \"./animations/backwardCompatibleAnimWrapper\";\nimport { Transition, Transitioning, createTransitioningComponent } from \"./Transitioning\";\nimport SpringUtils from \"./animations/SpringUtils\";\n\nvar Animated = _objectSpread({\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent: createAnimatedComponent,\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode\n}, base, {}, derived, {\n  decay: backwardCompatibleAnimWrapper(decay, DecayAnimation),\n  timing: backwardCompatibleAnimWrapper(timing, TimingAnimation),\n  spring: backwardCompatibleAnimWrapper(spring, SpringAnimation),\n  SpringUtils: SpringUtils,\n  addWhitelistedNativeProps: addWhitelistedNativeProps,\n  addWhitelistedUIProps: addWhitelistedUIProps\n});\n\nexport default Animated;\nexport { Easing, Transitioning, Transition, createTransitioningComponent };","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-reanimated/src/Animated.js"],"names":["Easing","AnimatedClock","AnimatedValue","AnimatedNode","AnimatedCode","base","derived","createAnimatedComponent","decay","timing","spring","TimingAnimation","SpringAnimation","DecayAnimation","addWhitelistedNativeProps","addWhitelistedUIProps","backwardCompatibleAnimWrapper","Transition","Transitioning","createTransitioningComponent","SpringUtils","Animated","View","Text","Image","ScrollView","Code","Clock","Value","Node"],"mappings":";;;;;;;;;;AACA,OAAOA,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,OAAZ;AACA,OAAOC,uBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SACEC,yBADF,EAEEC,qBAFF;AAIA,OAAOC,6BAAP;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,4BAHF;AAKA,OAAOC,WAAP;;AAEA,IAAMC,QAAQ;AAEZC,EAAAA,IAAI,EAAEf,uBAAuB,CAACe,IAAD,CAFjB;AAGZC,EAAAA,IAAI,EAAEhB,uBAAuB,CAACgB,IAAD,CAHjB;AAIZC,EAAAA,KAAK,EAAEjB,uBAAuB,CAACiB,KAAD,CAJlB;AAKZC,EAAAA,UAAU,EAAElB,uBAAuB,CAACkB,UAAD,CALvB;AAMZC,EAAAA,IAAI,EAAEtB,YANM;AAOZG,EAAAA,uBAAuB,EAAvBA,uBAPY;AAUZoB,EAAAA,KAAK,EAAE1B,aAVK;AAWZ2B,EAAAA,KAAK,EAAE1B,aAXK;AAYZ2B,EAAAA,IAAI,EAAE1B;AAZM,GAeTE,IAfS,MAgBTC,OAhBS;AAmBZE,EAAAA,KAAK,EAAEQ,6BAA6B,CAACR,KAAD,EAAQK,cAAR,CAnBxB;AAoBZJ,EAAAA,MAAM,EAAEO,6BAA6B,CAACP,MAAD,EAASE,eAAT,CApBzB;AAqBZD,EAAAA,MAAM,EAAEM,6BAA6B,CAACN,MAAD,EAASE,eAAT,CArBzB;AAsBZQ,EAAAA,WAAW,EAAXA,WAtBY;AAyBZN,EAAAA,yBAAyB,EAAzBA,yBAzBY;AA0BZC,EAAAA,qBAAqB,EAArBA;AA1BY,EAAd;;AA6BA,eAAeM,QAAf;AAEA,SAASrB,MAAT,EAAiBkB,aAAjB,EAAgCD,UAAhC,EAA4CE,4BAA5C","sourcesContent":["import { Image, ScrollView, Text, View } from 'react-native';\nimport Easing from './Easing';\nimport AnimatedClock from './core/AnimatedClock';\nimport AnimatedValue from './core/AnimatedValue';\nimport AnimatedNode from './core/AnimatedNode';\nimport AnimatedCode from './core/AnimatedCode';\nimport * as base from './base';\nimport * as derived from './derived';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport decay from './animations/decay';\nimport timing from './animations/timing';\nimport spring from './animations/spring';\nimport TimingAnimation from './animations/TimingAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport DecayAnimation from './animations/DecayAnimation';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport backwardCompatibleAnimWrapper from './animations/backwardCompatibleAnimWrapper';\nimport {\n  Transition,\n  Transitioning,\n  createTransitioningComponent,\n} from './Transitioning';\nimport SpringUtils from './animations/SpringUtils';\n\nconst Animated = {\n  // components\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent,\n\n  // classes\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode,\n\n  // operations\n  ...base,\n  ...derived,\n\n  // animations\n  decay: backwardCompatibleAnimWrapper(decay, DecayAnimation),\n  timing: backwardCompatibleAnimWrapper(timing, TimingAnimation),\n  spring: backwardCompatibleAnimWrapper(spring, SpringAnimation),\n  SpringUtils,\n\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n};\n\nexport default Animated;\n\nexport { Easing, Transitioning, Transition, createTransitioningComponent };\n"]},"metadata":{},"sourceType":"module"}
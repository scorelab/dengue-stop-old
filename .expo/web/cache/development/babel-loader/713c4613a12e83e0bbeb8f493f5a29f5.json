{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport Animation from \"./Animation\";\nimport decay from \"./decay\";\nimport { block, clockRunning, startClock, stopClock, cond } from \"../base\";\nimport Clock from \"../core/AnimatedClock\";\nimport AnimatedValue from \"../core/InternalAnimatedValue\";\n\nvar DecayAnimation = function (_Animation) {\n  _inherits(DecayAnimation, _Animation);\n\n  function DecayAnimation(config) {\n    var _this;\n\n    _classCallCheck(this, DecayAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DecayAnimation).call(this));\n    _this._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;\n    _this._velocity = config.velocity;\n    return _this;\n  }\n\n  _createClass(DecayAnimation, [{\n    key: \"start\",\n    value: function start(value) {\n      this._clock = new Clock();\n      var state = {\n        finished: new AnimatedValue(0),\n        velocity: new AnimatedValue(this._velocity),\n        position: value,\n        time: new AnimatedValue(0)\n      };\n      var config = {\n        deceleration: this._deceleration\n      };\n      return block([cond(clockRunning(this._clock), 0, [startClock(this._clock)]), decay(this._clock, state, config), cond(state.finished, stopClock(this._clock))]);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {}\n  }], [{\n    key: \"getDefaultState\",\n    value: function getDefaultState() {\n      return {\n        position: new AnimatedValue(0),\n        finished: new AnimatedValue(0),\n        time: new AnimatedValue(0),\n        velocity: new AnimatedValue(0)\n      };\n    }\n  }]);\n\n  return DecayAnimation;\n}(Animation);\n\nexport default DecayAnimation;","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-reanimated/src/animations/DecayAnimation.js"],"names":["Animation","decay","block","clockRunning","startClock","stopClock","cond","Clock","AnimatedValue","DecayAnimation","config","_deceleration","deceleration","undefined","_velocity","velocity","value","_clock","state","finished","position","time"],"mappings":";;;;;AAAA,OAAOA,SAAP;AAEA,OAAOC,KAAP;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,IAArD;AACA,OAAOC,KAAP;AACA,OAAOC,aAAP;;IAEMC,c;;;AACJ,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB;AACA,UAAKC,aAAL,GACED,MAAM,CAACE,YAAP,KAAwBC,SAAxB,GAAoCH,MAAM,CAACE,YAA3C,GAA0D,KAD5D;AAEA,UAAKE,SAAL,GAAiBJ,MAAM,CAACK,QAAxB;AAJkB;AAKnB;;;;0BAEKC,K,EAAO;AACX,WAAKC,MAAL,GAAc,IAAIV,KAAJ,EAAd;AACA,UAAMW,KAAK,GAAG;AACZC,QAAAA,QAAQ,EAAE,IAAIX,aAAJ,CAAkB,CAAlB,CADE;AAEZO,QAAAA,QAAQ,EAAE,IAAIP,aAAJ,CAAkB,KAAKM,SAAvB,CAFE;AAGZM,QAAAA,QAAQ,EAAEJ,KAHE;AAIZK,QAAAA,IAAI,EAAE,IAAIb,aAAJ,CAAkB,CAAlB;AAJM,OAAd;AAOA,UAAME,MAAM,GAAG;AACbE,QAAAA,YAAY,EAAE,KAAKD;AADN,OAAf;AAIA,aAAOT,KAAK,CAAC,CACXI,IAAI,CAACH,YAAY,CAAC,KAAKc,MAAN,CAAb,EAA4B,CAA5B,EAA+B,CAACb,UAAU,CAAC,KAAKa,MAAN,CAAX,CAA/B,CADO,EAEXhB,KAAK,CAAC,KAAKgB,MAAN,EAAcC,KAAd,EAAqBR,MAArB,CAFM,EAGXJ,IAAI,CAACY,KAAK,CAACC,QAAP,EAAiBd,SAAS,CAAC,KAAKY,MAAN,CAA1B,CAHO,CAAD,CAAZ;AAKD;;;2BAEM,CAEN;;;sCACwB;AACvB,aAAO;AACLG,QAAAA,QAAQ,EAAE,IAAIZ,aAAJ,CAAkB,CAAlB,CADL;AAELW,QAAAA,QAAQ,EAAE,IAAIX,aAAJ,CAAkB,CAAlB,CAFL;AAGLa,QAAAA,IAAI,EAAE,IAAIb,aAAJ,CAAkB,CAAlB,CAHD;AAILO,QAAAA,QAAQ,EAAE,IAAIP,aAAJ,CAAkB,CAAlB;AAJL,OAAP;AAMD;;;;EAtC0BR,S;;AAyC7B,eAAeS,cAAf","sourcesContent":["import Animation from './Animation';\n\nimport decay from './decay';\nimport { block, clockRunning, startClock, stopClock, cond } from '../base';\nimport Clock from '../core/AnimatedClock';\nimport AnimatedValue from '../core/InternalAnimatedValue';\n\nclass DecayAnimation extends Animation {\n  constructor(config) {\n    super();\n    this._deceleration =\n      config.deceleration !== undefined ? config.deceleration : 0.998;\n    this._velocity = config.velocity;\n  }\n\n  start(value) {\n    this._clock = new Clock();\n    const state = {\n      finished: new AnimatedValue(0),\n      velocity: new AnimatedValue(this._velocity),\n      position: value,\n      time: new AnimatedValue(0),\n    };\n\n    const config = {\n      deceleration: this._deceleration,\n    };\n\n    return block([\n      cond(clockRunning(this._clock), 0, [startClock(this._clock)]),\n      decay(this._clock, state, config),\n      cond(state.finished, stopClock(this._clock)),\n    ]);\n  }\n\n  stop() {\n    // not implemented yet\n  }\n  static getDefaultState() {\n    return {\n      position: new AnimatedValue(0),\n      finished: new AnimatedValue(0),\n      time: new AnimatedValue(0),\n      velocity: new AnimatedValue(0),\n    };\n  }\n}\n\nexport default DecayAnimation;\n"]},"metadata":{},"sourceType":"module"}
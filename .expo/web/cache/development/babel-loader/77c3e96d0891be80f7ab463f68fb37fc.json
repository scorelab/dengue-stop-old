{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style, classList) {\n  return styleResolver.resolve(style, classList);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      classList = _props.classList,\n      deprecatedClassName = _props.className,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"classList\", \"className\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props);\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  }\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  }\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], StyleSheet.compose(providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  }));\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading';\n  var finalClassList = [deprecatedClassName, needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  var _styleResolver = styleResolver(reactNativeStyle, finalClassList),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  }\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  }\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","defaultStyleResolver","style","classList","resolve","createDOMProps","component","props","_props","accessibilityLabel","accessibilityLiveRegion","accessibilityStates","deprecatedClassName","className","importantForAccessibility","nativeID","placeholderTextColor","providedStyle","testID","accessible","accessibilityComponentType","accessibilityRole","accessibilityTraits","domProps","disabled","isDisabled","role","propsToAriaRole","constructor","String","Array","isArray","focusable","tabIndex","buttonLikeRoles","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","_styleResolver","id","rel"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\nvar emptyObject = {}; // Reset styles for heading, link, and list DOM elements\n\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style, classList) {\n  return styleResolver.resolve(style, classList);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      classList = _props.classList,\n      deprecatedClassName = _props.className,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"classList\", \"className\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props); // GENERAL ACCESSIBILITY\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  } // DISABLED\n\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  } // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], StyleSheet.compose(providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  })); // Additional style resets for interactive elements\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [deprecatedClassName, needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver = styleResolver(reactNativeStyle, finalClassList),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  } // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  } // Automated test IDs\n\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"]},"metadata":{},"sourceType":"module"}
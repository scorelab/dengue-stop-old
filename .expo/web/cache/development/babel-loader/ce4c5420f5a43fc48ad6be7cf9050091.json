{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n\nvar FillRateHelper = function () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime;\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = performanceNow() - start;\n\n    var info = _objectSpread({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n    var now = performanceNow();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","performanceNow","warning","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","addListener","callback","push","remove","listener","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","_proto","prototype","activate","console","debug","deactivateAndFlush","start","info","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","round","computeBlankness","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","now","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","blankness","enabled"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\n\nvar FillRateHelper =\n/*#__PURE__*/\nfunction () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime; // const for flow\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = performanceNow() - start;\n\n    var info = _objectSpread({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength; // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n\n    var now = performanceNow();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    } // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    } // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;"]},"metadata":{},"sourceType":"module"}
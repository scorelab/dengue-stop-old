{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport ColorPropType from \"../ColorPropType\";\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nimport { bool, func, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nvar Button = function (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        accessibilityLabel = _this$props.accessibilityLabel,\n        color = _this$props.color,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        testID = _this$props.testID,\n        title = _this$props.title;\n    return React.createElement(TouchableOpacity, {\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      disabled: disabled,\n      onPress: onPress,\n      style: [styles.button, color && {\n        backgroundColor: color\n      }, disabled && styles.buttonDisabled],\n      testID: testID\n    }, React.createElement(Text, {\n      style: [styles.text, disabled && styles.textDisabled]\n    }, title));\n  };\n\n  return Button;\n}(Component);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  accessibilityLabel: string,\n  color: ColorPropType,\n  disabled: bool,\n  onPress: func.isRequired,\n  testID: string,\n  title: string.isRequired\n} : {};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","ColorPropType","StyleSheet","TouchableOpacity","Text","bool","func","string","React","Component","Button","_Component","apply","arguments","_proto","render","_this$props","props","accessibilityLabel","color","disabled","onPress","testID","title","createElement","accessibilityRole","style","styles","button","backgroundColor","buttonDisabled","text","textDisabled","propTypes","process","env","NODE_ENV","isRequired","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ColorPropType from '../ColorPropType';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nimport { bool, func, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        accessibilityLabel = _this$props.accessibilityLabel,\n        color = _this$props.color,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        testID = _this$props.testID,\n        title = _this$props.title;\n    return React.createElement(TouchableOpacity, {\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      disabled: disabled,\n      onPress: onPress,\n      style: [styles.button, color && {\n        backgroundColor: color\n      }, disabled && styles.buttonDisabled],\n      testID: testID\n    }, React.createElement(Text, {\n      style: [styles.text, disabled && styles.textDisabled]\n    }, title));\n  };\n\n  return Button;\n}(Component);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  accessibilityLabel: string,\n  color: ColorPropType,\n  disabled: bool,\n  onPress: func.isRequired,\n  testID: string,\n  title: string.isRequired\n} : {};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"module"}
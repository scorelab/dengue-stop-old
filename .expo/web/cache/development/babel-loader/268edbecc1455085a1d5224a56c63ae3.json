{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleInterpolator from \"./StackViewStyleInterpolator\";\nimport { supportsImprovedSpringAnimation } from \"../../utils/ReactNativeFeatures\";\nvar IOSTransitionSpec;\n\nif (supportsImprovedSpringAnimation()) {\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  };\n} else {\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing\n  };\n}\n\nvar SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\nvar ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\nvar FadeInFromBottomAndroid = {\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\nvar FadeOutToBottomAndroid = {\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid\n};\nvar NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\n\nfunction defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {\n  if (Platform.OS !== 'ios') {\n    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {\n      return FadeOutToBottomAndroid;\n    }\n\n    return FadeInFromBottomAndroid;\n  }\n\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {\n  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);\n\n  if (transitionConfigurer) {\n    return _objectSpread({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));\n  }\n\n  return defaultConfig;\n}\n\nexport default {\n  defaultTransitionConfig: defaultTransitionConfig,\n  getTransitionConfig: getTransitionConfig,\n  SlideFromRightIOS: SlideFromRightIOS,\n  ModalSlideFromBottomIOS: ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid: FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid: FadeOutToBottomAndroid,\n  NoAnimation: NoAnimation\n};","map":{"version":3,"sources":["StackViewTransitionConfigs.tsx"],"names":["supportsImprovedSpringAnimation","IOSTransitionSpec","timing","Animated","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","duration","easing","Easing","SlideFromRightIOS","transitionSpec","screenInterpolator","StyleInterpolator","containerStyleLight","backgroundColor","containerStyleDark","ModalSlideFromBottomIOS","FadeInFromBottomAndroid","FadeOutToBottomAndroid","NoAnimation","Platform","prevTransitionProps","transitionProps","defaultConfig","defaultTransitionConfig","transitionConfigurer","getTransitionConfig"],"mappings":"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","sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport { TransitionProps, TransitionConfig } from '../../types';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing,\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid,\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear), // accelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid,\n};\n\nconst NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\nfunction defaultTransitionConfig(\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig {\n  if (Platform.OS !== 'ios') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (\n      prevTransitionProps &&\n      transitionProps.index < prevTransitionProps.index\n    ) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig<T = {}>(\n  transitionConfigurer:\n    | undefined\n    | ((\n        transitionProps: TransitionProps,\n        prevTransitionProps?: TransitionProps,\n        isModal?: boolean\n      ) => T),\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig & T {\n  const defaultConfig = defaultTransitionConfig(\n    transitionProps,\n    prevTransitionProps,\n    isModal\n  );\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal),\n    };\n  }\n\n  return defaultConfig as any;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid,\n  NoAnimation,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter,\n    inherits = require('inherits'),\n    utils = require(\"../../utils/event\"),\n    urlUtils = require(\"../../utils/url\"),\n    XHR = global.XMLHttpRequest;\n\nvar debug = function debug() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function (method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {}\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n\n    this._cleanup();\n\n    return;\n  }\n\n  url = urlUtils.addQuery(url, 't=' + +new Date());\n  this.unloadRef = utils.unloadAdd(function () {\n    debug('unload cleanup');\n\n    self._cleanup(true);\n  });\n\n  try {\n    this.xhr.open(method, url, true);\n\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n\n      this.xhr.ontimeout = function () {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e);\n    this.emit('finish', 0, '');\n\n    this._cleanup(false);\n\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials');\n    this.xhr.withCredentials = true;\n  }\n\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function () {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n\n      switch (x.readyState) {\n        case 3:\n          try {\n            status = x.status;\n            text = x.responseText;\n          } catch (e) {}\n\n          debug('status', status);\n\n          if (status === 1223) {\n            status = 204;\n          }\n\n          if (status === 200 && text && text.length > 0) {\n            debug('chunk');\n            self.emit('chunk', status, text);\n          }\n\n          break;\n\n        case 4:\n          status = x.status;\n          debug('status', status);\n\n          if (status === 1223) {\n            status = 204;\n          }\n\n          if (status === 12005 || status === 12029) {\n            status = 0;\n          }\n\n          debug('finish', status, x.responseText);\n          self.emit('finish', status, x.responseText);\n\n          self._cleanup(false);\n\n          break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function (abort) {\n  debug('cleanup');\n\n  if (!this.xhr) {\n    return;\n  }\n\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef);\n\n  this.xhr.onreadystatechange = function () {};\n\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {}\n  }\n\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function () {\n  debug('close');\n\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR;\nvar axo = ['Active'].concat('Object').join('X');\n\nif (!AbstractXHRObject.enabled && axo in global) {\n  debug('overriding xmlhttprequest');\n\n  XHR = function XHR() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\n\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {}\n\nAbstractXHRObject.supportsCORS = cors;\nmodule.exports = AbstractXHRObject;","map":{"version":3,"sources":["C:/Users/Thivagar/AppData/Roaming/npm/node_modules/expo-cli/node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js"],"names":["EventEmitter","require","inherits","utils","urlUtils","XHR","global","XMLHttpRequest","debug","process","env","NODE_ENV","AbstractXHRObject","method","url","payload","opts","self","call","setTimeout","_start","prototype","xhr","x","emit","_cleanup","addQuery","Date","unloadRef","unloadAdd","open","timeout","ontimeout","e","noCredentials","supportsCORS","withCredentials","headers","key","setRequestHeader","onreadystatechange","text","status","readyState","responseText","length","send","abort","removeAllListeners","unloadDel","close","enabled","axo","concat","join","cors","ignored","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , utils = require('../../utils/event')\n  , urlUtils = require('../../utils/url')\n  , XHR = global.XMLHttpRequest\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function(method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {\n    // intentionally empty\n  }\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n    this._cleanup();\n    return;\n  }\n\n  // several browsers cache POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  // Explorer tends to keep connection open, even after the\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload cleanup');\n    self._cleanup(true);\n  });\n  try {\n    this.xhr.open(method, url, true);\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n      this.xhr.ontimeout = function() {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e);\n    // IE raises an exception on wrong port.\n    this.emit('finish', 0, '');\n    this._cleanup(false);\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials');\n    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\n    // \"This never affects same-site requests.\"\n\n    this.xhr.withCredentials = true;\n  }\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function() {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n      switch (x.readyState) {\n      case 3:\n        // IE doesn't like peeking into responseText or status\n        // on Microsoft.XMLHTTP and readystate=3\n        try {\n          status = x.status;\n          text = x.responseText;\n        } catch (e) {\n          // intentionally empty\n        }\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n\n        // IE does return readystate == 3 for 404 answers.\n        if (status === 200 && text && text.length > 0) {\n          debug('chunk');\n          self.emit('chunk', status, text);\n        }\n        break;\n      case 4:\n        status = x.status;\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n        // IE returns this for a bad port\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\n        if (status === 12005 || status === 12029) {\n          status = 0;\n        }\n\n        debug('finish', status, x.responseText);\n        self.emit('finish', status, x.responseText);\n        self._cleanup(false);\n        break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function(abort) {\n  debug('cleanup');\n  if (!this.xhr) {\n    return;\n  }\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef);\n\n  // IE needs this field to be a function\n  this.xhr.onreadystatechange = function() {};\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {\n      // intentionally empty\n    }\n  }\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR;\n// override XMLHttpRequest for IE6/7\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (!AbstractXHRObject.enabled && (axo in global)) {\n  debug('overriding xmlhttprequest');\n  XHR = function() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {\n  // intentionally empty\n}\n\nAbstractXHRObject.supportsCORS = cors;\n\nmodule.exports = AbstractXHRObject;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { cond, sub, divide, multiply, add, block, set, greaterOrEq } from \"../base\";\nexport default function timing(clock, state, config) {\n  var lastTime = cond(state.time, state.time, clock);\n  var frameTime = add(state.frameTime, sub(clock, lastTime));\n  var progress = config.easing(divide(state.frameTime, config.duration));\n  var distanceLeft = sub(config.toValue, state.position);\n  var fullDistance = divide(distanceLeft, sub(1, progress));\n  var startPosition = sub(config.toValue, fullDistance);\n  var nextProgress = config.easing(divide(frameTime, config.duration));\n  var nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n  return block([cond(greaterOrEq(frameTime, config.duration), [set(state.position, config.toValue), set(state.finished, 1)], set(state.position, nextPosition)), set(state.frameTime, frameTime), set(state.time, clock)]);\n}","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-reanimated/src/animations/timing.js"],"names":["cond","sub","divide","multiply","add","block","set","greaterOrEq","timing","clock","state","config","lastTime","time","frameTime","progress","easing","duration","distanceLeft","toValue","position","fullDistance","startPosition","nextProgress","nextPosition","finished"],"mappings":"AAAA,SACEA,IADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,GALF,EAMEC,KANF,EAOEC,GAPF,EAQEC,WARF;AAWA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACnD,MAAMC,QAAQ,GAAGZ,IAAI,CAACU,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACG,IAAnB,EAAyBJ,KAAzB,CAArB;AACA,MAAMK,SAAS,GAAGV,GAAG,CAACM,KAAK,CAACI,SAAP,EAAkBb,GAAG,CAACQ,KAAD,EAAQG,QAAR,CAArB,CAArB;AAEA,MAAMG,QAAQ,GAAGJ,MAAM,CAACK,MAAP,CAAcd,MAAM,CAACQ,KAAK,CAACI,SAAP,EAAkBH,MAAM,CAACM,QAAzB,CAApB,CAAjB;AACA,MAAMC,YAAY,GAAGjB,GAAG,CAACU,MAAM,CAACQ,OAAR,EAAiBT,KAAK,CAACU,QAAvB,CAAxB;AACA,MAAMC,YAAY,GAAGnB,MAAM,CAACgB,YAAD,EAAejB,GAAG,CAAC,CAAD,EAAIc,QAAJ,CAAlB,CAA3B;AACA,MAAMO,aAAa,GAAGrB,GAAG,CAACU,MAAM,CAACQ,OAAR,EAAiBE,YAAjB,CAAzB;AACA,MAAME,YAAY,GAAGZ,MAAM,CAACK,MAAP,CAAcd,MAAM,CAACY,SAAD,EAAYH,MAAM,CAACM,QAAnB,CAApB,CAArB;AACA,MAAMO,YAAY,GAAGpB,GAAG,CAACkB,aAAD,EAAgBnB,QAAQ,CAACkB,YAAD,EAAeE,YAAf,CAAxB,CAAxB;AAEA,SAAOlB,KAAK,CAAC,CACXL,IAAI,CACFO,WAAW,CAACO,SAAD,EAAYH,MAAM,CAACM,QAAnB,CADT,EAEF,CAACX,GAAG,CAACI,KAAK,CAACU,QAAP,EAAiBT,MAAM,CAACQ,OAAxB,CAAJ,EAAsCb,GAAG,CAACI,KAAK,CAACe,QAAP,EAAiB,CAAjB,CAAzC,CAFE,EAGFnB,GAAG,CAACI,KAAK,CAACU,QAAP,EAAiBI,YAAjB,CAHD,CADO,EAMXlB,GAAG,CAACI,KAAK,CAACI,SAAP,EAAkBA,SAAlB,CANQ,EAOXR,GAAG,CAACI,KAAK,CAACG,IAAP,EAAaJ,KAAb,CAPQ,CAAD,CAAZ;AASD","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  greaterOrEq,\n} from '../base';\n\nexport default function timing(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const frameTime = add(state.frameTime, sub(clock, lastTime));\n\n  const progress = config.easing(divide(state.frameTime, config.duration));\n  const distanceLeft = sub(config.toValue, state.position);\n  const fullDistance = divide(distanceLeft, sub(1, progress));\n  const startPosition = sub(config.toValue, fullDistance);\n  const nextProgress = config.easing(divide(frameTime, config.duration));\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n\n  return block([\n    cond(\n      greaterOrEq(frameTime, config.duration),\n      [set(state.position, config.toValue), set(state.finished, 1)],\n      set(state.position, nextPosition)\n    ),\n    set(state.frameTime, frameTime),\n    set(state.time, clock),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}
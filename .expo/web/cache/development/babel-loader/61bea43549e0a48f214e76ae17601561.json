{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport getSceneIndicesForInterpolationInputRange from \"../../utils/getSceneIndicesForInterpolationInputRange\";\n\nfunction hasHeader(scene) {\n  if (!scene) {\n    return true;\n  }\n\n  var _scene$descriptor$opt = scene.descriptor.options,\n      header = _scene$descriptor$opt.header,\n      headerShown = _scene$descriptor$opt.headerShown;\n  return header !== null && headerShown !== false;\n}\n\nvar crossFadeInterpolation = function crossFadeInterpolation(scenes, first, index, last) {\n  return {\n    inputRange: [first, first + 0.001, index - 0.9, index - 0.2, index, last - 0.001, last],\n    outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.3 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, 0],\n    extrapolate: 'clamp'\n  };\n};\n\nfunction isGoingBack(scenes) {\n  var lastSceneIndexInScenes = scenes.length - 1;\n  return !scenes[lastSceneIndexInScenes].isActive;\n}\n\nfunction forLayout(props) {\n  var layout = props.layout,\n      position = props.position,\n      scene = props.scene,\n      scenes = props.scenes,\n      mode = props.mode;\n\n  if (mode !== 'float') {\n    return {};\n  }\n\n  var isBack = isGoingBack(scenes);\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {};\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var width = layout.initWidth || Dimensions.get('window').width;\n\n  if (isBack && !hasHeader(scenes[index]) && !hasHeader(scenes[last]) || !isBack && !hasHeader(scenes[first]) && !hasHeader(scenes[index])) {\n    return {\n      transform: [{\n        translateX: width\n      }]\n    };\n  }\n\n  var rtlMult = I18nManager.isRTL ? -1 : 1;\n  var translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [rtlMult * (hasHeader(scenes[first]) ? 0 : width), rtlMult * (hasHeader(scenes[index]) ? 0 : isBack ? width : -width), rtlMult * (hasHeader(scenes[last]) ? 0 : -width)],\n    extrapolate: 'clamp'\n  });\n  return {\n    transform: [{\n      translateX: translateX\n    }]\n  };\n}\n\nfunction forLeft(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forCenter(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forRight(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forLeftButton(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var inputRange = [first, first + 0.001, first + Math.abs(index - first) / 2, index, last - Math.abs(last - index) / 2, last - 0.001, last];\n  var outputRange = [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.3 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.3 : 1, hasHeader(scenes[last]) ? 0 : 1, 0];\n  return {\n    opacity: position.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange,\n      extrapolate: 'clamp'\n    })\n  };\n}\n\nvar LEFT_LABEL_OFFSET = Dimensions.get('window').width / 2 - 70 - 25;\n\nfunction forLeftLabel(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var offset = LEFT_LABEL_OFFSET;\n  return {\n    opacity: position.interpolate({\n      inputRange: [first, first + 0.001, index - 0.35, index, index + 0.5, last - 0.001, last],\n      outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.5 : 1, hasHeader(scenes[last]) ? 0 : 1, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      translateX: position.interpolate({\n        inputRange: [first, first + 0.001, index, last - 0.001, last],\n        outputRange: I18nManager.isRTL ? [-offset * 1.5, hasHeader(scenes[first]) ? -offset * 1.5 : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset * 1.5 : 0, -offset * 1.5],\n        extrapolate: 'clamp'\n      })\n    }]\n  };\n}\n\nvar TITLE_OFFSET_IOS = Dimensions.get('window').width / 2 - 70 + 25;\n\nfunction forCenterFromLeft(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var offset = TITLE_OFFSET_IOS;\n  return {\n    opacity: position.interpolate({\n      inputRange: [first, first + 0.001, index - 0.5, index, index + 0.7, last - 0.001, last],\n      outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, hasHeader(scenes[last]) ? 0 : 1, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      translateX: position.interpolate({\n        inputRange: [first, first + 0.001, index, last - 0.001, last],\n        outputRange: I18nManager.isRTL ? [-offset, hasHeader(scenes[first]) ? -offset : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset : 0, -offset],\n        extrapolate: 'clamp'\n      })\n    }]\n  };\n}\n\nfunction forBackgroundWithFade(props) {\n  var position = props.position,\n      scene = props.scene;\n  var sceneRange = getSceneIndicesForInterpolationInputRange(props);\n  if (!sceneRange) return {\n    opacity: 0\n  };\n  return {\n    opacity: position.interpolate({\n      inputRange: [sceneRange.first, scene.index, sceneRange.last],\n      outputRange: [0, 1, 0],\n      extrapolate: 'clamp'\n    })\n  };\n}\n\nvar VISIBLE = {\n  opacity: 1\n};\nvar HIDDEN = {\n  opacity: 0\n};\n\nfunction forBackgroundWithInactiveHidden(_ref) {\n  var navigation = _ref.navigation,\n      scene = _ref.scene;\n  return navigation.state.index === scene.index ? VISIBLE : HIDDEN;\n}\n\nvar BACKGROUND_OFFSET = Dimensions.get('window').width;\n\nfunction forBackgroundWithTranslation(props) {\n  var position = props.position,\n      scene = props.scene;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var offset = BACKGROUND_OFFSET;\n  var outputRange = [offset, 0, -offset];\n  return {\n    transform: [{\n      translateX: position.interpolate({\n        inputRange: [first, index, last],\n        outputRange: I18nManager.isRTL ? outputRange.reverse() : outputRange,\n        extrapolate: 'clamp'\n      })\n    }]\n  };\n}\n\nvar forBackground = forBackgroundWithInactiveHidden;\nexport default {\n  forLayout: forLayout,\n  forLeft: forLeft,\n  forLeftButton: forLeftButton,\n  forLeftLabel: forLeftLabel,\n  forCenterFromLeft: forCenterFromLeft,\n  forCenter: forCenter,\n  forRight: forRight,\n  forBackground: forBackground,\n  forBackgroundWithInactiveHidden: forBackgroundWithInactiveHidden,\n  forBackgroundWithFade: forBackgroundWithFade,\n  forBackgroundWithTranslation: forBackgroundWithTranslation\n};","map":{"version":3,"sources":["HeaderStyleInterpolator.tsx"],"names":["header","headerShown","scene","crossFadeInterpolation","inputRange","first","index","last","outputRange","hasHeader","scenes","extrapolate","lastSceneIndexInScenes","layout","position","mode","props","isBack","isGoingBack","interpolate","getSceneIndicesForInterpolationInputRange","width","Dimensions","transform","translateX","rtlMult","I18nManager","opacity","Math","LEFT_LABEL_OFFSET","offset","TITLE_OFFSET_IOS","sceneRange","VISIBLE","HIDDEN","navigation","BACKGROUND_OFFSET","forBackground","forLayout","forLeft","forLeftButton","forLeftLabel","forCenterFromLeft","forCenter","forRight","forBackgroundWithInactiveHidden","forBackgroundWithFade","forBackgroundWithTranslation"],"mappings":"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","sourcesContent":["import { Dimensions, I18nManager } from 'react-native';\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\nimport { Scene, SceneInterpolatorProps } from '../../types';\n\nfunction hasHeader(scene: Scene) {\n  if (!scene) {\n    return true;\n  }\n  const { header, headerShown } = scene.descriptor.options;\n\n  return header !== null && headerShown !== false;\n}\n\nconst crossFadeInterpolation = (\n  scenes: Scene[],\n  first: number,\n  index: number,\n  last: number\n): { inputRange: number[]; outputRange: number[]; extrapolate: 'clamp' } => ({\n  inputRange: [\n    first,\n    first + 0.001,\n    index - 0.9,\n    index - 0.2,\n    index,\n    last - 0.001,\n    last,\n  ],\n  outputRange: [\n    0,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0.3 : 1,\n    hasHeader(scenes[index]) ? 1 : 0,\n    hasHeader(scenes[last]) ? 0 : 1,\n    0,\n  ],\n  extrapolate: 'clamp',\n});\n\n/**\n * Utilities that build the style for the navigation header.\n *\n * +-------------+-------------+-------------+\n * |             |             |             |\n * |    Left     |   Title     |   Right     |\n * |  Component  |  Component  | Component   |\n * |             |             |             |\n * +-------------+-------------+-------------+\n */\n\nfunction isGoingBack(scenes: Scene[]) {\n  const lastSceneIndexInScenes = scenes.length - 1;\n  return !scenes[lastSceneIndexInScenes].isActive;\n}\n\nfunction forLayout(props: SceneInterpolatorProps) {\n  const { layout, position, scene, scenes, mode } = props;\n  if (mode !== 'float') {\n    return {};\n  }\n  const isBack = isGoingBack(scenes);\n\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {};\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  // We really shouldn't render the scene at all until we know the width of the\n  // stack. That said, in every case that I have ever seen, this has just been\n  // the full width of the window. This won't continue to be true if we support\n  // layouts like iPad master-detail. For now, in order to solve\n  // https://github.com/react-navigation/react-navigation/issues/4264, I have\n  // opted for the heuristic that we will use the window width until we have\n  // measured (and they will usually be the same).\n  const width = layout.initWidth || Dimensions.get('window').width;\n\n  // Make sure the header stays hidden when transitioning between 2 screens\n  // with no header.\n  if (\n    (isBack && !hasHeader(scenes[index]) && !hasHeader(scenes[last])) ||\n    (!isBack && !hasHeader(scenes[first]) && !hasHeader(scenes[index]))\n  ) {\n    return {\n      transform: [{ translateX: width }],\n    };\n  }\n\n  const rtlMult = I18nManager.isRTL ? -1 : 1;\n  const translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [\n      rtlMult * (hasHeader(scenes[first]) ? 0 : width),\n      rtlMult * (hasHeader(scenes[index]) ? 0 : isBack ? width : -width),\n      rtlMult * (hasHeader(scenes[last]) ? 0 : -width),\n    ],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    transform: [{ translateX }],\n  };\n}\n\nfunction forLeft(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\nfunction forCenter(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\nfunction forRight(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\n/**\n * iOS UINavigationController style interpolators\n */\n\nfunction forLeftButton(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  // The gist of what we're doing here is animating the left button _normally_ (fast fade)\n  // when both scenes in transition have headers. When the current, next, or previous scene _don't_\n  // have a header, we don't fade the button, and only set it's opacity to 0 at the last moment\n  // of the transition.\n  const inputRange = [\n    first,\n    first + 0.001,\n    first + Math.abs(index - first) / 2,\n    index,\n    last - Math.abs(last - index) / 2,\n    last - 0.001,\n    last,\n  ];\n  const outputRange = [\n    0,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0.3 : 1,\n    hasHeader(scenes[index]) ? 1 : 0,\n    hasHeader(scenes[last]) ? 0.3 : 1,\n    hasHeader(scenes[last]) ? 0 : 1,\n    0,\n  ];\n\n  return {\n    opacity: position.interpolate({\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp',\n    }),\n  };\n}\n\n/*\n * NOTE: this offset calculation is an approximation that gives us\n * decent results in many cases, but it is ultimately a poor substitute\n * for text measurement. See the comment on title for more information.\n *\n * - 70 is the width of the left button area.\n * - 25 is the width of the left button icon (to account for label offset)\n */\nconst LEFT_LABEL_OFFSET = Dimensions.get('window').width / 2 - 70 - 25;\n\nfunction forLeftLabel(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  const offset = LEFT_LABEL_OFFSET;\n\n  // Similarly to the animation of the left label, when animating to or from a scene without\n  // a header, we keep the label at full opacity and in the same position for as long as possible.\n  return {\n    // For now we fade out the label before fading in the title, so the\n    // differences between the label and title position can be hopefully not so\n    // noticable to the user\n    opacity: position.interpolate({\n      inputRange: [\n        first,\n        first + 0.001,\n        index - 0.35,\n        index,\n        index + 0.5,\n        last - 0.001,\n        last,\n      ],\n      outputRange: [\n        0,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[index]) ? 1 : 0,\n        hasHeader(scenes[last]) ? 0.5 : 1,\n        hasHeader(scenes[last]) ? 0 : 1,\n        0,\n      ],\n      extrapolate: 'clamp',\n    }),\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange: [first, first + 0.001, index, last - 0.001, last],\n          outputRange: I18nManager.isRTL\n            ? [\n                -offset * 1.5,\n                hasHeader(scenes[first]) ? -offset * 1.5 : 0,\n                0,\n                hasHeader(scenes[last]) ? offset : 0,\n                offset,\n              ]\n            : [\n                offset,\n                hasHeader(scenes[first]) ? offset : 0,\n                0,\n                hasHeader(scenes[last]) ? -offset * 1.5 : 0,\n                -offset * 1.5,\n              ],\n          extrapolate: 'clamp',\n        }),\n      },\n    ],\n  };\n}\n\n/*\n * NOTE: this offset calculation is a an approximation that gives us\n * decent results in many cases, but it is ultimately a poor substitute\n * for text measurement. We want the back button label to transition\n * smoothly into the title text and to do this we need to understand\n * where the title is positioned within the title container (since it is\n * centered).\n *\n * - 70 is the width of the left button area.\n * - 25 is the width of the left button icon (to account for label offset)\n */\nconst TITLE_OFFSET_IOS = Dimensions.get('window').width / 2 - 70 + 25;\n\nfunction forCenterFromLeft(props: SceneInterpolatorProps) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const offset = TITLE_OFFSET_IOS;\n\n  return {\n    opacity: position.interpolate({\n      inputRange: [\n        first,\n        first + 0.001,\n        index - 0.5,\n        index,\n        index + 0.7,\n        last - 0.001,\n        last,\n      ],\n      outputRange: [\n        0,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[index]) ? 1 : 0,\n        hasHeader(scenes[last]) ? 0 : 1,\n        hasHeader(scenes[last]) ? 0 : 1,\n        0,\n      ],\n      extrapolate: 'clamp',\n    }),\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange: [first, first + 0.001, index, last - 0.001, last],\n          outputRange: I18nManager.isRTL\n            ? [\n                -offset,\n                hasHeader(scenes[first]) ? -offset : 0,\n                0,\n                hasHeader(scenes[last]) ? offset : 0,\n                offset,\n              ]\n            : [\n                offset,\n                hasHeader(scenes[first]) ? offset : 0,\n                0,\n                hasHeader(scenes[last]) ? -offset : 0,\n                -offset,\n              ],\n          extrapolate: 'clamp',\n        }),\n      },\n    ],\n  };\n}\n\n// Fade in background of header while transitioning\nfunction forBackgroundWithFade(props: SceneInterpolatorProps) {\n  const { position, scene } = props;\n  const sceneRange = getSceneIndicesForInterpolationInputRange(props);\n  if (!sceneRange) return { opacity: 0 };\n  return {\n    opacity: position.interpolate({\n      inputRange: [sceneRange.first, scene.index, sceneRange.last],\n      outputRange: [0, 1, 0],\n      extrapolate: 'clamp',\n    }),\n  };\n}\n\nconst VISIBLE = { opacity: 1 };\nconst HIDDEN = { opacity: 0 };\n\n// Toggle visibility of header without fading\nfunction forBackgroundWithInactiveHidden({\n  navigation,\n  scene,\n}: SceneInterpolatorProps) {\n  return navigation.state.index === scene.index ? VISIBLE : HIDDEN;\n}\n\n// Translate the background with the card\nconst BACKGROUND_OFFSET = Dimensions.get('window').width;\n\nfunction forBackgroundWithTranslation(props: SceneInterpolatorProps) {\n  const { position, scene } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return { opacity: 0 };\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const offset = BACKGROUND_OFFSET;\n  const outputRange = [offset, 0, -offset];\n  return {\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange: [first, index, last],\n          outputRange: I18nManager.isRTL ? outputRange.reverse() : outputRange,\n          extrapolate: 'clamp',\n        }),\n      },\n    ],\n  };\n}\n\n// Default to fade transition\nconst forBackground = forBackgroundWithInactiveHidden;\n\nexport default {\n  forLayout,\n  forLeft,\n  forLeftButton,\n  forLeftLabel,\n  forCenterFromLeft,\n  forCenter,\n  forRight,\n  forBackground,\n  forBackgroundWithInactiveHidden,\n  forBackgroundWithFade,\n  forBackgroundWithTranslation,\n};\n"]},"metadata":{},"sourceType":"module"}
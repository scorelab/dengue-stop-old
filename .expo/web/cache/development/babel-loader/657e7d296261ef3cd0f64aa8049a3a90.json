{"ast":null,"code":"'use strict';\n\nvar random = require(\"../../utils/random\"),\n    urlUtils = require(\"../../utils/url\");\n\nvar debug = function debug() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n\n  try {\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function (url, payload, callback) {\n  debug(url, payload);\n\n  if (!form) {\n    createForm();\n  }\n\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {}\n\n  form.submit();\n\n  var completed = function completed(err) {\n    debug('completed', id, err);\n\n    if (!iframe.onerror) {\n      return;\n    }\n\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\n    setTimeout(function () {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = '';\n    callback(err);\n  };\n\n  iframe.onerror = function () {\n    debug('onerror', id);\n    completed();\n  };\n\n  iframe.onload = function () {\n    debug('onload', id);\n    completed();\n  };\n\n  iframe.onreadystatechange = function (e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n\n  return function () {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};","map":{"version":3,"sources":["C:/Users/Thivagar/AppData/Roaming/npm/node_modules/expo-cli/node_modules/sockjs-client/lib/transport/sender/jsonp.js"],"names":["random","require","urlUtils","debug","process","env","NODE_ENV","form","area","createIframe","id","global","document","createElement","x","iframe","name","createForm","style","display","position","method","enctype","acceptCharset","appendChild","body","module","exports","url","payload","callback","string","target","action","addQuery","addPath","value","e","submit","completed","err","onerror","onreadystatechange","onload","setTimeout","parentNode","removeChild","readyState","Error"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,sBAApB;AAAA,IACIC,QAAQ,GAAGD,OAAO,mBADtB;;AAIA,IAAIE,KAAK,GAAG,iBAAW,CAAE,CAAzB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAP,CAAiB,4BAAjB,CAAR;AACD;;AAED,IAAIM,IAAJ,EAAUC,IAAV;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACxBP,EAAAA,KAAK,CAAC,cAAD,EAAiBO,EAAjB,CAAL;;AACA,MAAI;AAEF,WAAOC,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,mBAAmBH,EAAnB,GAAwB,IAAtD,CAAP;AACD,GAHD,CAGE,OAAOI,CAAP,EAAU;AACV,QAAIC,MAAM,GAAGJ,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,QAA9B,CAAb;AACAE,IAAAA,MAAM,CAACC,IAAP,GAAcN,EAAd;AACA,WAAOK,MAAP;AACD;AACF;;AAED,SAASE,UAAT,GAAsB;AACpBd,EAAAA,KAAK,CAAC,YAAD,CAAL;AACAI,EAAAA,IAAI,GAAGI,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,MAA9B,CAAP;AACAN,EAAAA,IAAI,CAACW,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACAZ,EAAAA,IAAI,CAACW,KAAL,CAAWE,QAAX,GAAsB,UAAtB;AACAb,EAAAA,IAAI,CAACc,MAAL,GAAc,MAAd;AACAd,EAAAA,IAAI,CAACe,OAAL,GAAe,mCAAf;AACAf,EAAAA,IAAI,CAACgB,aAAL,GAAqB,OAArB;AAEAf,EAAAA,IAAI,GAAGG,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,UAA9B,CAAP;AACAL,EAAAA,IAAI,CAACQ,IAAL,GAAY,GAAZ;AACAT,EAAAA,IAAI,CAACiB,WAAL,CAAiBhB,IAAjB;AAEAG,EAAAA,MAAM,CAACC,QAAP,CAAgBa,IAAhB,CAAqBD,WAArB,CAAiCjB,IAAjC;AACD;;AAEDmB,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,EAAiC;AAChD3B,EAAAA,KAAK,CAACyB,GAAD,EAAMC,OAAN,CAAL;;AACA,MAAI,CAACtB,IAAL,EAAW;AACTU,IAAAA,UAAU;AACX;;AACD,MAAIP,EAAE,GAAG,MAAMV,MAAM,CAAC+B,MAAP,CAAc,CAAd,CAAf;AACAxB,EAAAA,IAAI,CAACyB,MAAL,GAActB,EAAd;AACAH,EAAAA,IAAI,CAAC0B,MAAL,GAAc/B,QAAQ,CAACgC,QAAT,CAAkBhC,QAAQ,CAACiC,OAAT,CAAiBP,GAAjB,EAAsB,aAAtB,CAAlB,EAAwD,OAAOlB,EAA/D,CAAd;AAEA,MAAIK,MAAM,GAAGN,YAAY,CAACC,EAAD,CAAzB;AACAK,EAAAA,MAAM,CAACL,EAAP,GAAYA,EAAZ;AACAK,EAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACAZ,EAAAA,IAAI,CAACiB,WAAL,CAAiBT,MAAjB;;AAEA,MAAI;AACFP,IAAAA,IAAI,CAAC4B,KAAL,GAAaP,OAAb;AACD,GAFD,CAEE,OAAOQ,CAAP,EAAU,CAEX;;AACD9B,EAAAA,IAAI,CAAC+B,MAAL;;AAEA,MAAIC,SAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;AAC5BrC,IAAAA,KAAK,CAAC,WAAD,EAAcO,EAAd,EAAkB8B,GAAlB,CAAL;;AACA,QAAI,CAACzB,MAAM,CAAC0B,OAAZ,EAAqB;AACnB;AACD;;AACD1B,IAAAA,MAAM,CAAC2B,kBAAP,GAA4B3B,MAAM,CAAC0B,OAAP,GAAiB1B,MAAM,CAAC4B,MAAP,GAAgB,IAA7D;AAGAC,IAAAA,UAAU,CAAC,YAAW;AACpBzC,MAAAA,KAAK,CAAC,aAAD,EAAgBO,EAAhB,CAAL;AACAK,MAAAA,MAAM,CAAC8B,UAAP,CAAkBC,WAAlB,CAA8B/B,MAA9B;AACAA,MAAAA,MAAM,GAAG,IAAT;AACD,KAJS,EAIP,GAJO,CAAV;AAKAP,IAAAA,IAAI,CAAC4B,KAAL,GAAa,EAAb;AAGAN,IAAAA,QAAQ,CAACU,GAAD,CAAR;AACD,GAjBD;;AAkBAzB,EAAAA,MAAM,CAAC0B,OAAP,GAAiB,YAAW;AAC1BtC,IAAAA,KAAK,CAAC,SAAD,EAAYO,EAAZ,CAAL;AACA6B,IAAAA,SAAS;AACV,GAHD;;AAIAxB,EAAAA,MAAM,CAAC4B,MAAP,GAAgB,YAAW;AACzBxC,IAAAA,KAAK,CAAC,QAAD,EAAWO,EAAX,CAAL;AACA6B,IAAAA,SAAS;AACV,GAHD;;AAIAxB,EAAAA,MAAM,CAAC2B,kBAAP,GAA4B,UAASL,CAAT,EAAY;AACtClC,IAAAA,KAAK,CAAC,oBAAD,EAAuBO,EAAvB,EAA2BK,MAAM,CAACgC,UAAlC,EAA8CV,CAA9C,CAAL;;AACA,QAAItB,MAAM,CAACgC,UAAP,KAAsB,UAA1B,EAAsC;AACpCR,MAAAA,SAAS;AACV;AACF,GALD;;AAMA,SAAO,YAAW;AAChBpC,IAAAA,KAAK,CAAC,SAAD,EAAYO,EAAZ,CAAL;AACA6B,IAAAA,SAAS,CAAC,IAAIS,KAAJ,CAAU,SAAV,CAAD,CAAT;AACD,GAHD;AAID,CAzDD","sourcesContent":["'use strict';\n\nvar random = require('../../utils/random')\n  , urlUtils = require('../../utils/url')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n  try {\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function(url, payload, callback) {\n  debug(url, payload);\n  if (!form) {\n    createForm();\n  }\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {\n    // seriously broken browsers get here\n  }\n  form.submit();\n\n  var completed = function(err) {\n    debug('completed', id, err);\n    if (!iframe.onerror) {\n      return;\n    }\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\n    // Opera mini doesn't like if we GC iframe\n    // immediately, thus this timeout.\n    setTimeout(function() {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = '';\n    // It is not possible to detect if the iframe succeeded or\n    // failed to submit our form.\n    callback(err);\n  };\n  iframe.onerror = function() {\n    debug('onerror', id);\n    completed();\n  };\n  iframe.onload = function() {\n    debug('onload', id);\n    completed();\n  };\n  iframe.onreadystatechange = function(e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n  return function() {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};\n"]},"metadata":{},"sourceType":"script"}
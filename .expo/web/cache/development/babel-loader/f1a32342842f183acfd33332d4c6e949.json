{"ast":null,"code":"'use strict';\n\nrequire(\"./shims\");\n\nvar URL = require('url-parse'),\n    inherits = require('inherits'),\n    JSON3 = require('json3'),\n    random = require(\"./utils/random\"),\n    escape = require(\"./utils/escape\"),\n    urlUtils = require(\"./utils/url\"),\n    eventUtils = require(\"./utils/event\"),\n    transport = require(\"./utils/transport\"),\n    objectUtils = require(\"./utils/object\"),\n    browser = require(\"./utils/browser\"),\n    log = require(\"./utils/log\"),\n    Event = require(\"./event/event\"),\n    EventTarget = require(\"./event/eventtarget\"),\n    loc = require(\"./location\"),\n    CloseEvent = require(\"./event/close\"),\n    TransportMessageEvent = require(\"./event/trans-message\"),\n    InfoReceiver = require(\"./info-receiver\");\n\nvar debug = function debug() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:main');\n}\n\nvar transports;\n\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n\n  EventTarget.call(this);\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n  options = options || {};\n\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n\n  this._transportsWhitelist = options.transports;\n  this._transportOptions = options.transportOptions || {};\n  var sessionId = options.sessionId || 8;\n\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function () {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\n  }\n\n  this._server = options.server || random.numberString(1000);\n  var parsedUrl = new URL(url);\n\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:';\n\n  if (loc.protocol === 'https:' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function (proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n\n    if (i < sortedProtocols.length - 1 && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain(),\n    sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),\n    sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || code >= 3000 && code <= 4999;\n}\n\nSockJS.prototype.close = function (code, reason) {\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  var wasClean = true;\n\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function (data) {\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = require(\"./version\");\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function (info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n\n    return;\n  }\n\n  this._rto = this.countRTO(rtt);\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function () {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n\n    if (Transport.needBody) {\n      if (!global.document.body || typeof global.document.readyState !== 'undefined' && global.document.readyState !== 'complete' && global.document.readyState !== 'interactive') {\n        debug('waiting for body');\n\n        this._transports.unshift(Transport);\n\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    var timeoutMs = this._rto * Transport.roundTrips || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    var options = this._transportOptions[Transport.transportName];\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n    return;\n  }\n\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function () {\n  debug('_transportTimeout');\n\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transport) {\n      this._transport.close();\n    }\n\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function (msg) {\n  debug('_transportMessage', msg);\n  var self = this,\n      type = msg.slice(0, 1),\n      content = msg.slice(1),\n      payload;\n\n  switch (type) {\n    case 'o':\n      this._open();\n\n      return;\n\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function (p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n\n      break;\n\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function (code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n\n  if (this._transport) {\n    this._transport.removeAllListeners();\n\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function () {\n  debug('_open', this._transport.transportName, this.readyState);\n\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function (code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n\n    this._ir.close();\n\n    this._ir = null;\n  }\n\n  if (this._transport) {\n    this._transport.close();\n\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function () {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\nSockJS.prototype.countRTO = function (rtt) {\n  if (rtt > 100) {\n    return 4 * rtt;\n  }\n\n  return 300 + rtt;\n};\n\nmodule.exports = function (availableTransports) {\n  transports = transport(availableTransports);\n\n  require(\"./iframe-bootstrap\")(SockJS, availableTransports);\n\n  return SockJS;\n};","map":{"version":3,"sources":["C:/Users/Thivagar/AppData/Roaming/npm/node_modules/expo-cli/node_modules/sockjs-client/lib/main.js"],"names":["require","URL","inherits","JSON3","random","escape","urlUtils","eventUtils","transport","objectUtils","browser","log","Event","EventTarget","loc","CloseEvent","TransportMessageEvent","InfoReceiver","debug","process","env","NODE_ENV","transports","SockJS","url","protocols","options","arguments","length","TypeError","call","readyState","CONNECTING","extensions","protocol","protocols_whitelist","warn","_transportsWhitelist","_transportOptions","transportOptions","sessionId","_generateSessionId","string","_server","server","numberString","parsedUrl","host","SyntaxError","hash","secure","Error","Array","isArray","sortedProtocols","sort","forEach","proto","i","o","getOrigin","href","_origin","toLowerCase","set","pathname","replace","_urlInfo","nullOrigin","hasDomain","sameOrigin","isOriginEqual","sameScheme","isSchemeEqual","_ir","once","_receiveInfo","bind","userSetCode","code","prototype","close","reason","CLOSING","CLOSED","wasClean","_close","send","data","OPEN","_transport","quote","version","info","rtt","_rto","countRTO","_transUrl","base_url","extend","enabledTransports","filterToEnabled","_transports","main","_connect","Transport","shift","transportName","needBody","global","document","body","unshift","attachEvent","timeoutMs","roundTrips","_transportTimeoutId","setTimeout","_transportTimeout","transportUrl","addPath","transportObj","on","_transportMessage","_transportClose","msg","self","type","slice","content","payload","_open","dispatchEvent","parse","e","p","removeAllListeners","clearTimeout","forceFail","onmessage","onclose","onerror","module","exports","availableTransports"],"mappings":"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","sourcesContent":["'use strict';\n\nrequire('./shims');\n\nvar URL = require('url-parse')\n  , inherits = require('inherits')\n  , JSON3 = require('json3')\n  , random = require('./utils/random')\n  , escape = require('./utils/escape')\n  , urlUtils = require('./utils/url')\n  , eventUtils = require('./utils/event')\n  , transport = require('./utils/transport')\n  , objectUtils = require('./utils/object')\n  , browser = require('./utils/browser')\n  , log = require('./utils/log')\n  , Event = require('./event/event')\n  , EventTarget = require('./event/eventtarget')\n  , loc = require('./location')\n  , CloseEvent = require('./event/close')\n  , TransportMessageEvent = require('./event/trans-message')\n  , InfoReceiver = require('./info-receiver')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:main');\n}\n\nvar transports;\n\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n  EventTarget.call(this);\n\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n\n  // non-standard extension\n  options = options || {};\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n  this._transportsWhitelist = options.transports;\n  this._transportOptions = options.transportOptions || {};\n\n  var sessionId = options.sessionId || 8;\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function() {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\n  }\n\n  this._server = options.server || random.numberString(1000);\n\n  // Step 1 of WS spec - parse and validate the url. Issue #8\n  var parsedUrl = new URL(url);\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:';\n  // Step 2 - don't allow secure origin with an insecure protocol\n  if (loc.protocol === 'https:' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  // Step 5 - check protocols argument\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function(proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n\n  // Step 6 - convert origin\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n\n  // remove the trailing slash\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n\n  // store the sanitized url\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n\n  // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain()\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || (code >= 3000 && code <= 4999);\n}\n\nSockJS.prototype.close = function(code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  // Step 3.1\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  // TODO look at docs to determine how to set this\n  var wasClean = true;\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function(data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = require('./version');\n\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function(info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n    return;\n  }\n\n  // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n  this._rto = this.countRTO(rtt);\n  // allow server to override url used for the actual transport\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  // determine list of desired and supported transports\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function() {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n    if (Transport.needBody) {\n      if (!global.document.body ||\n          (typeof global.document.readyState !== 'undefined' &&\n            global.document.readyState !== 'complete' &&\n            global.document.readyState !== 'interactive')) {\n        debug('waiting for body');\n        this._transports.unshift(Transport);\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    // calculate timeout based on RTO and round trips. Default to 5s\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    var options = this._transportOptions[Transport.transportName];\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n\n    return;\n  }\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function() {\n  debug('_transportTimeout');\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transport) {\n      this._transport.close();\n    }\n\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function(msg) {\n  debug('_transportMessage', msg);\n  var self = this\n    , type = msg.slice(0, 1)\n    , content = msg.slice(1)\n    , payload\n    ;\n\n  // first check for messages that don't need a payload\n  switch (type) {\n    case 'o':\n      this._open();\n      return;\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function(p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n      break;\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function(code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n  if (this._transport) {\n    this._transport.removeAllListeners();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function() {\n  debug('_open', this._transport.transportName, this.readyState);\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function(code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n    this._ir.close();\n    this._ir = null;\n  }\n  if (this._transport) {\n    this._transport.close();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function() {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\nSockJS.prototype.countRTO = function(rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\n\nmodule.exports = function(availableTransports) {\n  transports = transport(availableTransports);\n  require('./iframe-bootstrap')(SockJS, availableTransports);\n  return SockJS;\n};\n"]},"metadata":{},"sourceType":"script"}
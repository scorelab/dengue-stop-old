{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from \"../utils/invariant\";\nimport NavigationContext from \"./NavigationContext\";\nexport default function withNavigation(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    forwardRef: true\n  };\n\n  var ComponentWithNavigation = function (_React$Component) {\n    _inherits(ComponentWithNavigation, _React$Component);\n\n    function ComponentWithNavigation() {\n      _classCallCheck(this, ComponentWithNavigation);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ComponentWithNavigation).apply(this, arguments));\n    }\n\n    _createClass(ComponentWithNavigation, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var navigationProp = this.props.navigation;\n        return React.createElement(NavigationContext.Consumer, null, function (navigationContext) {\n          var navigation = navigationProp || navigationContext;\n          invariant(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');\n          return React.createElement(Component, _extends({}, _this.props, {\n            navigation: navigation,\n            ref: config.forwardRef ? _this.props.onRef : undefined\n          }));\n        });\n      }\n    }]);\n\n    return ComponentWithNavigation;\n  }(React.Component);\n\n  _defineProperty(ComponentWithNavigation, \"displayName\", \"withNavigation(\".concat(Component.displayName || Component.name, \")\"));\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}","map":{"version":3,"sources":["withNavigation.js"],"names":["config","forwardRef","React","Component","navigationProp","navigationContext","navigation","invariant","undefined","hoistStatics"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AACA,OAAA,SAAA;AACA,OAAA,iBAAA;AAEA,eAAe,SAAA,cAAA,CAAA,SAAA,EAGb;AAAA,MADAA,MACA,uEADS;AAAEC,IAAAA,UAAU,EAAE;AAAd,GACT;;AAAA,MACA,uBADA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAKW;AAAA;;AACP,YAAMG,cAAc,GAAG,KAAA,KAAA,CAAvB,UAAA;AACA,eACE,KAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,EAAA,IAAA,EACGC,UAAAA,iBAAiB,EAAI;AACpB,cAAMC,UAAU,GAAGF,cAAc,IAAjC,iBAAA;AACAG,UAAAA,SAAS,CACP,CAAC,CADM,UAAA,EAATA,wJAAS,CAATA;AAIA,iBACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EACM,KAAA,CADN,KAAA,EAAA;AAEE,YAAA,UAAU,EAFZ,UAAA;AAGE,YAAA,GAAG,EAAEP,MAAM,CAANA,UAAAA,GAAoB,KAAA,CAAA,KAAA,CAApBA,KAAAA,GAAuCQ;AAH9C,WAAA,CAAA,CADF;AARN,SACE,CADF;AAkBD;AAzBH;;AAAA;AAAA,IACsCN,KAAK,CAA3C,SADA;;AAAA,EAAA,eAAA,CAAA,uBAAA,EAAA,aAAA,EAAA,kBAAA,MAAA,CAEyCC,SAAS,CAATA,WAAAA,IACrCA,SAAS,CAHb,IAAA,EAAA,GAAA,CAAA,CAAA;;AA4BA,SAAOM,YAAY,CAAA,uBAAA,EAAnB,SAAmB,CAAnB;AACD","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport NavigationContext from './NavigationContext';\n\nexport default function withNavigation(\n  Component,\n  config = { forwardRef: true }\n) {\n  class ComponentWithNavigation extends React.Component {\n    static displayName = `withNavigation(${Component.displayName ||\n      Component.name})`;\n\n    render() {\n      const navigationProp = this.props.navigation;\n      return (\n        <NavigationContext.Consumer>\n          {navigationContext => {\n            const navigation = navigationProp || navigationContext;\n            invariant(\n              !!navigation,\n              'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n            );\n            return (\n              <Component\n                {...this.props}\n                navigation={navigation}\n                ref={config.forwardRef ? this.props.onRef : undefined}\n              />\n            );\n          }}\n        </NavigationContext.Consumer>\n      );\n    }\n  }\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}\n"]},"metadata":{},"sourceType":"module"}
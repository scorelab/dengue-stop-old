{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nexport var isOrientationLandscape = function isOrientationLandscape(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width > height;\n};\nexport default function (WrappedComponent) {\n  var withOrientation = function (_React$Component) {\n    _inherits(withOrientation, _React$Component);\n\n    function withOrientation() {\n      var _this;\n\n      _classCallCheck(this, withOrientation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(withOrientation).call(this));\n\n      _defineProperty(_assertThisInitialized(_this), \"handleOrientationChange\", function (_ref2) {\n        var window = _ref2.window;\n        var isLandscape = isOrientationLandscape(window);\n\n        _this.setState({\n          isLandscape: isLandscape\n        });\n      });\n\n      var _isLandscape = isOrientationLandscape(Dimensions.get('window'));\n\n      _this.state = {\n        isLandscape: _isLandscape\n      };\n      return _this;\n    }\n\n    _createClass(withOrientation, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        Dimensions.addEventListener('change', this.handleOrientationChange);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        Dimensions.removeEventListener('change', this.handleOrientationChange);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(WrappedComponent, _extends({}, this.props, this.state));\n      }\n    }]);\n\n    return withOrientation;\n  }(React.Component);\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}","map":{"version":3,"sources":["withOrientation.js"],"names":["isOrientationLandscape","height","width","React","constructor","isLandscape","Dimensions","window","hoistNonReactStatic"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAA,mBAAA,MAAA,yBAAA;AAEA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAAC,KAAD,QAAC,KAAD;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,SAAuBC,KAAK,GAA3D,MAA+B;AAAA,CAA/B;AAEP,eAAe,UAAA,gBAAA,EAA2B;AAAA,MACxC,eADwC;AAAA;;AAEtCE,+BAAc;AAAA;;AAAA;;AACZ;;AADY,MAAA,eAAA,gCAAA,yBAAA,EAeY,iBAAgB;AAAA,YAAbG,MAAa,SAAbA,MAAa;AACxC,YAAMF,WAAW,GAAGL,sBAAsB,CAA1C,MAA0C,CAA1C;;AACA,cAAA,QAAA,CAAc;AAAEK,UAAAA,WAAAA,EAAAA;AAAF,SAAd;AAjBY,OAAA,CAAA;;AAGZ,UAAMA,YAAW,GAAGL,sBAAsB,CAACM,UAAU,CAAVA,GAAAA,CAA3C,QAA2CA,CAAD,CAA1C;;AACA,YAAA,KAAA,GAAa;AAAED,QAAAA,WAAW,EAAXA;AAAF,OAAb;AAJY;AAKb;;AAPqC;AAAA;AAAA,0CASlB;AAClBC,QAAAA,UAAU,CAAVA,gBAAAA,CAAAA,QAAAA,EAAsC,KAAtCA,uBAAAA;AACD;AAXqC;AAAA;AAAA,6CAaf;AACrBA,QAAAA,UAAU,CAAVA,mBAAAA,CAAAA,QAAAA,EAAyC,KAAzCA,uBAAAA;AACD;AAfqC;AAAA;AAAA,+BAsB7B;AACP,eAAO,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAsB,KAAtB,KAAA,EAAsC,KAA7C,KAAO,CAAA,CAAP;AACD;AAxBqC;;AAAA;AAAA,IACVH,KAAK,CAAnC,SADwC;;AA2BxC,SAAOK,mBAAmB,CAAA,eAAA,EAA1B,gBAA0B,CAA1B;AACD","sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function(WrappedComponent) {\n  class withOrientation extends React.Component {\n    constructor() {\n      super();\n\n      const isLandscape = isOrientationLandscape(Dimensions.get('window'));\n      this.state = { isLandscape };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}
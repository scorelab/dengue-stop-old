{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thivagar\\\\Documents\\\\GSOC Work\\\\dengue-stop\\\\node_modules\\\\react-native-router-flux\\\\src\\\\NavBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationActions } from 'react-navigation';\nimport { DrawerActions } from 'react-navigation-drawer';\nimport _backButtonImage from \"../images/back_chevron.png\";\nvar hitSlop = {\n  top: 15,\n  bottom: 15,\n  left: 15,\n  right: 15\n};\nexport function BackButton(state) {\n  var textButtonStyle = [styles.barBackButtonText, state.backButtonTextStyle];\n  var style = [styles.backButton, state.leftButtonStyle];\n  var buttonImage = state.backButtonImage || _backButtonImage;\n  var tintColor = getValue(state.backButtonTintColor, state) || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var onPress = state.onBack;\n\n  if (onPress) {\n    onPress = onPress.bind(null, state);\n  } else {\n    onPress = function onPress() {\n      return state.navigation.dispatch(NavigationActions.back());\n    };\n  }\n\n  if (!state.backButtonImage) {\n    return React.createElement(HeaderBackButton, {\n      onPress: onPress,\n      title: state.backTitle,\n      titleStyle: textButtonStyle,\n      tintColor: tintColor,\n      truncatedTitle: state.truncatedTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      }\n    });\n  }\n\n  var text = state.backTitle ? React.createElement(Text, {\n    style: textButtonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, state.backTitle) : null;\n  return React.createElement(TouchableOpacity, {\n    testID: \"backNavButton\",\n    style: styles.backButtonContainer,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  }, React.createElement(View, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, buttonImage && !state.hideBackImage && React.createElement(Image, {\n    source: buttonImage,\n    style: [styles.backButtonImage, state.barButtonIconStyle, state.leftButtonIconStyle, {\n      tintColor: tintColor\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }), text));\n}\nexport function LeftButton(state) {\n  var onPress = state.onLeft;\n  var buttonImage = getValue(state.leftButtonImage, state);\n  var menuIcon = getValue(state.drawerIcon, state);\n  var style = [styles.leftButton, state.leftButtonStyle];\n  var leftButtonTextStyle = getValue(state.leftButtonTextStyle, state);\n  var leftButtonIconStyle = getValue(state.leftButtonIconStyle, state);\n  var leftButtonStyle = [styles.defaultImageStyle, leftButtonIconStyle];\n  var leftTitle = state.getLeftTitle ? state.getLeftTitle(state) : getValue(state.leftTitle, state);\n  var textColor = getValue(state.leftButtonTintColor, state);\n  var tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var textStyle = [styles.barLeftButtonText, tintColor && {\n    color: tintColor\n  }, leftButtonTextStyle, textColor && {\n    color: textColor\n  }];\n\n  if (state.leftButton || state.left) {\n    var Button = state.leftButton || state.left;\n    return React.createElement(Button, _extends({}, state, {\n      key: \"leftNavBarBtn\",\n      testID: \"leftNavButton\",\n      style: [].concat(style, leftButtonStyle),\n      textStyle: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      }\n    }));\n  }\n\n  if (!onPress && !state.hideDrawerButton && (state.drawerImage || menuIcon) && state.drawerPosition !== 'right') {\n    buttonImage = state.drawerImage;\n\n    if (buttonImage || menuIcon) {\n      onPress = function onPress() {\n        return state.navigation.dispatch(DrawerActions.openDrawer());\n      };\n    }\n\n    if (!menuIcon) {\n      menuIcon = React.createElement(Image, {\n        source: buttonImage,\n        style: [state.leftButtonIconStyle || styles.defaultImageStyle, {\n          tintColor: tintColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      });\n    }\n  }\n\n  if (onPress && (leftTitle || buttonImage || menuIcon)) {\n    onPress = onPress.bind(null, state);\n    return React.createElement(TouchableOpacity, {\n      key: \"leftNavBarBtn\",\n      testID: \"leftNavButton\",\n      style: style,\n      onPress: onPress,\n      hitSlop: state.hitSlop || hitSlop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      }\n    }, leftTitle && React.createElement(Text, {\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    }, leftTitle), !leftTitle && (menuIcon || buttonImage) && React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      }\n    }, menuIcon || React.createElement(Image, {\n      source: buttonImage,\n      style: [state.leftButtonIconStyle || styles.defaultImageStyle, {\n        tintColor: tintColor\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      }\n    })));\n  }\n\n  if (!!state.onLeft ^ !!(leftTitle || buttonImage || menuIcon)) {\n    console.warn(\"Both onLeft and leftTitle/leftButtonImage\\n            must be specified for the scene: \" + state.name);\n  }\n\n  return null;\n}\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nexport function RightButton(state) {\n  if (!state) {\n    return null;\n  }\n\n  var onPress = state.onRight;\n  var buttonImage = getValue(state.rightButtonImage, state);\n  var menuIcon = state.drawerIcon;\n  var style = [styles.rightButton, state.rightButtonStyle];\n  var rightButtonTextStyle = getValue(state.rightButtonTextStyle, state);\n  var rightButtonIconStyle = getValue(state.rightButtonIconStyle, state);\n  var rightButtonStyle = [styles.defaultImageStyle, rightButtonIconStyle];\n  var rightTitle = state.getRightTitle ? state.getRightTitle(state) : getValue(state.rightTitle, state);\n  var textColor = getValue(state.rightButtonTintColor, state);\n  var tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var textStyle = [styles.barRightButtonText, tintColor && {\n    color: tintColor\n  }, rightButtonTextStyle, textColor && {\n    color: textColor\n  }];\n\n  if (state.rightButton || state.right) {\n    var Button = state.rightButton || state.right;\n    return React.createElement(Button, _extends({}, state, {\n      key: \"rightNavBarBtn\",\n      testID: \"rightNavButton\",\n      style: style,\n      textButtonStyle: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      }\n    }));\n  }\n\n  if (!onPress && !state.hideDrawerButton && state.drawerImage && state.drawerPosition === 'right') {\n    buttonImage = state.drawerImage;\n\n    if (buttonImage || menuIcon) {\n      onPress = function onPress() {\n        return state.navigation.dispatch(DrawerActions.openDrawer());\n      };\n    }\n\n    if (!menuIcon) {\n      menuIcon = React.createElement(Image, {\n        source: buttonImage,\n        style: [rightButtonStyle, {\n          tintColor: tintColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      });\n    }\n  }\n\n  if (onPress && (rightTitle || buttonImage)) {\n    onPress = onPress.bind(null, state);\n    return React.createElement(TouchableOpacity, {\n      key: \"rightNavBarBtn\",\n      testID: \"rightNavButton\",\n      style: style,\n      onPress: onPress,\n      hitSlop: state.hitSlop || hitSlop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      }\n    }, rightTitle && React.createElement(Text, {\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      }\n    }, rightTitle), !rightTitle && buttonImage && React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }\n    }, menuIcon || React.createElement(Image, {\n      source: buttonImage,\n      style: [state.rightButtonIconStyle || styles.defaultImageStyle, {\n        tintColor: tintColor\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      }\n    })));\n  }\n\n  if (!!state.onRight ^ !!(typeof rightTitle !== 'undefined' || typeof buttonImage !== 'undefined')) {\n    console.warn(\"Both onRight and rightTitle/rightButtonImage\\n            must be specified for the scene: \" + state.routeName);\n  }\n\n  return null;\n}\nvar styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleWrapper: _objectSpread({\n    marginTop: 10\n  }, Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 5\n    },\n    windows: {\n      top: 5\n    }\n  })),\n  header: _objectSpread({\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0\n  }, Platform.select({\n    ios: {\n      height: 64\n    },\n    android: {\n      height: 54\n    },\n    windows: {\n      height: 54\n    }\n  }), {\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287'\n  }),\n  backButton: _objectSpread({}, Platform.select({\n    ios: {\n      top: 12\n    },\n    android: {\n      top: 10\n    },\n    windows: {\n      top: 8\n    }\n  }), {\n    left: 2,\n    paddingLeft: 8,\n    flexDirection: 'row',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }),\n  rightButton: {\n    right: 2,\n    paddingRight: 8\n  },\n  leftButton: {\n    left: 2,\n    paddingLeft: 8\n  },\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17\n  },\n  backButtonContainer: {\n    height: 50,\n    width: 70\n  },\n  backButtonImage: _objectSpread({}, Platform.select({\n    android: {\n      marginTop: 5\n    }\n  }), {\n    width: 13,\n    height: 21\n  }),\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-router-flux/src/NavBar.js"],"names":["React","HeaderBackButton","NavigationActions","DrawerActions","_backButtonImage","hitSlop","top","bottom","left","right","BackButton","state","textButtonStyle","styles","barBackButtonText","backButtonTextStyle","style","backButton","leftButtonStyle","buttonImage","backButtonImage","tintColor","getValue","backButtonTintColor","navBarButtonColor","headerTintColor","onPress","onBack","bind","navigation","dispatch","back","backTitle","truncatedTitle","text","backButtonContainer","hideBackImage","barButtonIconStyle","leftButtonIconStyle","LeftButton","onLeft","leftButtonImage","menuIcon","drawerIcon","leftButton","leftButtonTextStyle","defaultImageStyle","leftTitle","getLeftTitle","textColor","leftButtonTintColor","textStyle","barLeftButtonText","color","Button","hideDrawerButton","drawerImage","drawerPosition","openDrawer","flex","justifyContent","alignItems","console","warn","name","value","params","Function","RightButton","onRight","rightButtonImage","rightButton","rightButtonStyle","rightButtonTextStyle","rightButtonIconStyle","rightTitle","getRightTitle","rightButtonTintColor","barRightButtonText","routeName","StyleSheet","create","title","textAlign","fontSize","width","alignSelf","titleImage","titleWrapper","marginTop","Platform","select","ios","android","windows","header","backgroundColor","paddingTop","height","borderBottomWidth","borderBottomColor","paddingLeft","flexDirection","transform","scaleX","I18nManager","isRTL","paddingRight","resizeMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport {\n  Platform, I18nManager, Image, StyleSheet, Text, TouchableOpacity, View,\n} from 'react-native';\nimport { NavigationActions } from 'react-navigation';\nimport { DrawerActions } from 'react-navigation-drawer';\nimport _backButtonImage from '../images/back_chevron.png';\n\nconst hitSlop = {\n  top: 15,\n  bottom: 15,\n  left: 15,\n  right: 15,\n};\nexport function BackButton(state) {\n  const textButtonStyle = [styles.barBackButtonText, state.backButtonTextStyle];\n  const style = [styles.backButton, state.leftButtonStyle];\n  const buttonImage = state.backButtonImage || _backButtonImage;\n  const tintColor = getValue(state.backButtonTintColor, state) || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  let onPress = state.onBack;\n  if (onPress) {\n    onPress = onPress.bind(null, state);\n  } else {\n    onPress = () => state.navigation.dispatch(NavigationActions.back());\n  }\n\n  // returning react-navigation's back button well styled for ios and android if rnrf4-supported customization\n  // is not required\n  if (!state.backButtonImage) {\n    return <HeaderBackButton onPress={onPress} title={state.backTitle} titleStyle={textButtonStyle} tintColor={tintColor} truncatedTitle={state.truncatedTitle} />;\n  }\n\n  const text = state.backTitle ? <Text style={textButtonStyle}>{state.backTitle}</Text> : null;\n\n  return (\n    <TouchableOpacity testID=\"backNavButton\" style={styles.backButtonContainer} onPress={onPress}>\n      <View style={style}>\n        {buttonImage && !state.hideBackImage && <Image source={buttonImage} style={[styles.backButtonImage, state.barButtonIconStyle, state.leftButtonIconStyle, { tintColor }]} />}\n        {text}\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nexport function LeftButton(state) {\n  let onPress = state.onLeft;\n  let buttonImage = getValue(state.leftButtonImage, state);\n  let menuIcon = getValue(state.drawerIcon, state);\n  const style = [styles.leftButton, state.leftButtonStyle];\n  const leftButtonTextStyle = getValue(state.leftButtonTextStyle, state);\n  const leftButtonIconStyle = getValue(state.leftButtonIconStyle, state);\n  const leftButtonStyle = [styles.defaultImageStyle, leftButtonIconStyle];\n  const leftTitle = state.getLeftTitle ? state.getLeftTitle(state) : getValue(state.leftTitle, state);\n  const textColor = getValue(state.leftButtonTintColor, state);\n  const tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  const textStyle = [styles.barLeftButtonText, tintColor && { color: tintColor }, leftButtonTextStyle, textColor && { color: textColor }];\n\n  if (state.leftButton || state.left) {\n    const Button = state.leftButton || state.left;\n    return <Button {...state} key=\"leftNavBarBtn\" testID=\"leftNavButton\" style={[...style, ...leftButtonStyle]} textStyle={textStyle} />;\n  }\n\n  if (!onPress && !state.hideDrawerButton && (state.drawerImage || menuIcon) && state.drawerPosition !== 'right') {\n    buttonImage = state.drawerImage;\n    if (buttonImage || menuIcon) {\n      onPress = () => state.navigation.dispatch(DrawerActions.openDrawer());\n    }\n    if (!menuIcon) {\n      menuIcon = <Image source={buttonImage} style={[state.leftButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />;\n    }\n  }\n\n  if (onPress && (leftTitle || buttonImage || menuIcon)) {\n    onPress = onPress.bind(null, state);\n    return (\n      <TouchableOpacity key=\"leftNavBarBtn\" testID=\"leftNavButton\" style={style} onPress={onPress} hitSlop={state.hitSlop || hitSlop}>\n        {leftTitle && <Text style={textStyle}>{leftTitle}</Text>}\n        {!leftTitle && (menuIcon || buttonImage) && (\n          <View\n            style={{\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-start',\n            }}\n          >\n            {menuIcon || <Image source={buttonImage} style={[state.leftButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />}\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  }\n  if (!!state.onLeft ^ !!(leftTitle || buttonImage || menuIcon)) {\n    console.warn(`Both onLeft and leftTitle/leftButtonImage\n            must be specified for the scene: ${state.name}`);\n  }\n  return null;\n}\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nexport function RightButton(state) {\n  if (!state) {\n    return null;\n  }\n\n  let onPress = state.onRight;\n  let buttonImage = getValue(state.rightButtonImage, state);\n  let menuIcon = state.drawerIcon;\n  const style = [styles.rightButton, state.rightButtonStyle];\n  const rightButtonTextStyle = getValue(state.rightButtonTextStyle, state);\n  const rightButtonIconStyle = getValue(state.rightButtonIconStyle, state);\n  const rightButtonStyle = [styles.defaultImageStyle, rightButtonIconStyle];\n  const rightTitle = state.getRightTitle ? state.getRightTitle(state) : getValue(state.rightTitle, state);\n  const textColor = getValue(state.rightButtonTintColor, state);\n  const tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  const textStyle = [styles.barRightButtonText, tintColor && { color: tintColor }, rightButtonTextStyle, textColor && { color: textColor }];\n\n  if (state.rightButton || state.right) {\n    const Button = state.rightButton || state.right;\n    return <Button {...state} key=\"rightNavBarBtn\" testID=\"rightNavButton\" style={style} textButtonStyle={textStyle} />;\n  }\n\n  if (!onPress && !state.hideDrawerButton && state.drawerImage && state.drawerPosition === 'right') {\n    buttonImage = state.drawerImage;\n    if (buttonImage || menuIcon) {\n      onPress = () => state.navigation.dispatch(DrawerActions.openDrawer());\n    }\n    if (!menuIcon) {\n      menuIcon = <Image source={buttonImage} style={[rightButtonStyle, { tintColor }]} />;\n    }\n  }\n\n  if (onPress && (rightTitle || buttonImage)) {\n    onPress = onPress.bind(null, state);\n    return (\n      <TouchableOpacity key=\"rightNavBarBtn\" testID=\"rightNavButton\" style={style} onPress={onPress} hitSlop={state.hitSlop || hitSlop}>\n        {rightTitle && <Text style={textStyle}>{rightTitle}</Text>}\n        {!rightTitle && buttonImage && (\n          <View\n            style={{\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-end',\n            }}\n          >\n            {menuIcon || <Image source={buttonImage} style={[state.rightButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />}\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  }\n  if (!!state.onRight ^ !!(typeof rightTitle !== 'undefined' || typeof buttonImage !== 'undefined')) {\n    console.warn(`Both onRight and rightTitle/rightButtonImage\n            must be specified for the scene: ${state.routeName}`);\n  }\n  return null;\n}\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleWrapper: {\n    marginTop: 10,\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 5,\n      },\n      windows: {\n        top: 5,\n      },\n    }),\n  },\n  header: {\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0,\n    ...Platform.select({\n      ios: {\n        height: 64,\n      },\n      android: {\n        height: 54,\n      },\n      windows: {\n        height: 54,\n      },\n    }),\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287',\n  },\n  backButton: {\n    ...Platform.select({\n      ios: {\n        top: 12,\n      },\n      android: {\n        top: 10,\n      },\n      windows: {\n        top: 8,\n      },\n    }),\n    left: 2,\n    paddingLeft: 8,\n    flexDirection: 'row',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  rightButton: {\n    right: 2,\n    paddingRight: 8,\n  },\n  leftButton: {\n    left: 2,\n    paddingLeft: 8,\n  },\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17,\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6,\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n  },\n  backButtonContainer: {\n    height: 50,\n    width: 70,\n  },\n  backButtonImage: {\n    ...Platform.select({\n      android: {\n        marginTop: 5,\n      },\n    }),\n    width: 13,\n    height: 21,\n  },\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
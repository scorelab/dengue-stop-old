{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { adapt } from \"./AnimatedBlock\";\nimport { val } from \"../val\";\n\nvar AnimatedCallFunc = function (_AnimatedNode) {\n  _inherits(AnimatedCallFunc, _AnimatedNode);\n\n  function AnimatedCallFunc(what, args, params) {\n    var _this;\n\n    _classCallCheck(this, AnimatedCallFunc);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedCallFunc).call(this, {\n      type: 'callfunc',\n      what: what.__nodeID,\n      args: args.map(function (n) {\n        return n.__nodeID;\n      }),\n      params: params.map(function (n) {\n        return n.__nodeID;\n      })\n    }, _toConsumableArray(args)));\n    _this._what = what;\n    _this._args = args;\n    _this._params = params;\n    return _this;\n  }\n\n  _createClass(AnimatedCallFunc, [{\n    key: \"beginContext\",\n    value: function beginContext() {\n      var _this2 = this;\n\n      this._params.forEach(function (param, index) {\n        param.beginContext(_this2._args[index]);\n      });\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this._params.forEach(function (param, index) {\n        param.endContext();\n      });\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this.beginContext();\n      var value = val(this._what);\n      this.endContext();\n      return value;\n    }\n  }]);\n\n  return AnimatedCallFunc;\n}(AnimatedNode);\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(function (p) {\n    return adapt(p);\n  }), params);\n}","map":{"version":3,"sources":["C:/Users/Thivagar/Documents/GSOC Work/dengue-stop/node_modules/react-native-reanimated/src/core/AnimatedCallFunc.js"],"names":["AnimatedNode","adapt","val","AnimatedCallFunc","what","args","params","type","__nodeID","map","n","_what","_args","_params","forEach","param","index","beginContext","endContext","value","createAnimatedCallFunc","proc","p"],"mappings":";;;;;;AAAA,OAAOA,YAAP;AACA,SAASC,KAAT;AACA,SAASC,GAAT;;IAEMC,gB;;;AAIJ,4BAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;AAAA;;AAAA;;AAC9B,0FACE;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEH,MAAAA,IAAI,EAAEA,IAAI,CAACI,QAFb;AAGEH,MAAAA,IAAI,EAAEA,IAAI,CAACI,GAAL,CAAS,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,QAAN;AAAA,OAAV,CAHR;AAIEF,MAAAA,MAAM,EAAEA,MAAM,CAACG,GAAP,CAAW,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,QAAN;AAAA,OAAZ;AAJV,KADF,qBAOMH,IAPN;AASA,UAAKM,KAAL,GAAaP,IAAb;AACA,UAAKQ,KAAL,GAAaP,IAAb;AACA,UAAKQ,OAAL,GAAeP,MAAf;AAZ8B;AAa/B;;;;mCAEc;AAAA;;AACb,WAAKO,OAAL,CAAaC,OAAb,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrCD,QAAAA,KAAK,CAACE,YAAN,CAAmB,MAAI,CAACL,KAAL,CAAWI,KAAX,CAAnB;AACD,OAFD;AAGD;;;iCAEY;AACX,WAAKH,OAAL,CAAaC,OAAb,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrCD,QAAAA,KAAK,CAACG,UAAN;AACD,OAFD;AAGD;;;mCAEc;AACb,WAAKD,YAAL;AACA,UAAME,KAAK,GAAGjB,GAAG,CAAC,KAAKS,KAAN,CAAjB;AACA,WAAKO,UAAL;AACA,aAAOC,KAAP;AACD;;;;EApC4BnB,Y;;AAuC/B,OAAO,SAASoB,sBAAT,CAAgCC,IAAhC,EAAsChB,IAAtC,EAA4CC,MAA5C,EAAoD;AACzD,SAAO,IAAIH,gBAAJ,CAAqBkB,IAArB,EAA2BhB,IAAI,CAACI,GAAL,CAAS,UAAAa,CAAC;AAAA,WAAIrB,KAAK,CAACqB,CAAD,CAAT;AAAA,GAAV,CAA3B,EAAoDhB,MAApD,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    super(\n      {\n        type: 'callfunc',\n        what: what.__nodeID,\n        args: args.map(n => n.__nodeID),\n        params: params.map(n => n.__nodeID),\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  beginContext() {\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index]);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param, index) => {\n      param.endContext();\n    });\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(p => adapt(p)), params);\n}\n"]},"metadata":{},"sourceType":"module"}
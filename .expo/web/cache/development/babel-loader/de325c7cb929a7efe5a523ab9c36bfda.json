{"ast":null,"code":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty,\n    undef;\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g,\n      result = {},\n      part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1]),\n        value = decode(part[2]);\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n  var pairs = [],\n      value,\n      key;\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n      if (key === null || value === null) continue;\n      pairs.push(key + '=' + value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\nexports.stringify = querystringify;\nexports.parse = querystring;","map":{"version":3,"sources":["C:/Users/Thivagar/AppData/Roaming/npm/node_modules/expo-cli/node_modules/querystringify/index.js"],"names":["has","Object","prototype","hasOwnProperty","undef","decode","input","decodeURIComponent","replace","e","encode","encodeURIComponent","querystring","query","parser","result","part","exec","key","value","querystringify","obj","prefix","pairs","call","isNaN","push","length","join","exports","stringify","parse"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA3B;AAAA,IACIC,KADJ;;AAUA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAI;AACF,WAAOC,kBAAkB,CAACD,KAAK,CAACE,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,CAAzB;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF;;AASD,SAASC,MAAT,CAAgBJ,KAAhB,EAAuB;AACrB,MAAI;AACF,WAAOK,kBAAkB,CAACL,KAAD,CAAzB;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF;;AASD,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,MAAM,GAAG,qBAAb;AAAA,MACIC,MAAM,GAAG,EADb;AAAA,MAEIC,IAFJ;;AAIA,SAAOA,IAAI,GAAGF,MAAM,CAACG,IAAP,CAAYJ,KAAZ,CAAd,EAAkC;AAChC,QAAIK,GAAG,GAAGb,MAAM,CAACW,IAAI,CAAC,CAAD,CAAL,CAAhB;AAAA,QACIG,KAAK,GAAGd,MAAM,CAACW,IAAI,CAAC,CAAD,CAAL,CADlB;AAWA,QAAIE,GAAG,KAAK,IAAR,IAAgBC,KAAK,KAAK,IAA1B,IAAkCD,GAAG,IAAIH,MAA7C,EAAqD;AACrDA,IAAAA,MAAM,CAACG,GAAD,CAAN,GAAcC,KAAd;AACD;;AAED,SAAOJ,MAAP;AACD;;AAUD,SAASK,cAAT,CAAwBC,GAAxB,EAA6BC,MAA7B,EAAqC;AACnCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AAEA,MAAIC,KAAK,GAAG,EAAZ;AAAA,MACIJ,KADJ;AAAA,MAEID,GAFJ;AAOA,MAAI,aAAa,OAAOI,MAAxB,EAAgCA,MAAM,GAAG,GAAT;;AAEhC,OAAKJ,GAAL,IAAYG,GAAZ,EAAiB;AACf,QAAIrB,GAAG,CAACwB,IAAJ,CAASH,GAAT,EAAcH,GAAd,CAAJ,EAAwB;AACtBC,MAAAA,KAAK,GAAGE,GAAG,CAACH,GAAD,CAAX;;AAMA,UAAI,CAACC,KAAD,KAAWA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKf,KAA5B,IAAqCqB,KAAK,CAACN,KAAD,CAArD,CAAJ,EAAmE;AACjEA,QAAAA,KAAK,GAAG,EAAR;AACD;;AAEDD,MAAAA,GAAG,GAAGP,kBAAkB,CAACO,GAAD,CAAxB;AACAC,MAAAA,KAAK,GAAGR,kBAAkB,CAACQ,KAAD,CAA1B;AAMA,UAAID,GAAG,KAAK,IAAR,IAAgBC,KAAK,KAAK,IAA9B,EAAoC;AACpCI,MAAAA,KAAK,CAACG,IAAN,CAAWR,GAAG,GAAE,GAAL,GAAUC,KAArB;AACD;AACF;;AAED,SAAOI,KAAK,CAACI,MAAN,GAAeL,MAAM,GAAGC,KAAK,CAACK,IAAN,CAAW,GAAX,CAAxB,GAA0C,EAAjD;AACD;;AAKDC,OAAO,CAACC,SAAR,GAAoBV,cAApB;AACAS,OAAO,CAACE,KAAR,GAAgBnB,WAAhB","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"]},"metadata":{},"sourceType":"script"}
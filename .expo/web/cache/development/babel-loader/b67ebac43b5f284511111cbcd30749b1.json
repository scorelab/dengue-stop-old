{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext } from 'react-navigation';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar DEFAULT_KEYBOARD_ANIMATION_CONFIG = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150\n    }\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100\n    }\n  }\n};\n\nvar TouchableWithoutFeedbackWrapper = function (_React$Component) {\n  _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n  function TouchableWithoutFeedbackWrapper() {\n    _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TouchableWithoutFeedbackWrapper).apply(this, arguments));\n  }\n\n  _createClass(TouchableWithoutFeedbackWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          focused = _this$props.focused,\n          onPress = _this$props.onPress,\n          onLongPress = _this$props.onLongPress,\n          testID = _this$props.testID,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          accessibilityRole = _this$props.accessibilityRole,\n          accessibilityStates = _this$props.accessibilityStates,\n          rest = _objectWithoutProperties(_this$props, [\"route\", \"focused\", \"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        onLongPress: onLongPress,\n        testID: testID,\n        hitSlop: {\n          left: 15,\n          right: 15,\n          top: 0,\n          bottom: 5\n        },\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates\n      }, React.createElement(View, rest));\n    }\n  }]);\n\n  return TouchableWithoutFeedbackWrapper;\n}(React.Component);\n\nvar TabBarBottom = function (_React$Component2) {\n  _inherits(TabBarBottom, _React$Component2);\n\n  function TabBarBottom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TabBarBottom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_getKeyboardAnimationConfigByType\", function (type) {\n      var keyboardHidesTabBarAnimationConfig = _this.props.keyboardHidesTabBarAnimationConfig;\n      var defaultKeyboardAnimationConfig = DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n      var keyboardAnimationConfig = (keyboardHidesTabBarAnimationConfig === null || keyboardHidesTabBarAnimationConfig === void 0 ? void 0 : keyboardHidesTabBarAnimationConfig[type]) || defaultKeyboardAnimationConfig;\n\n      if (keyboardAnimationConfig && keyboardAnimationConfig.animation === 'timing') {\n        return _objectSpread({}, defaultKeyboardAnimationConfig, {}, keyboardAnimationConfig, {\n          config: _objectSpread({}, defaultKeyboardAnimationConfig.config, {}, keyboardAnimationConfig.config)\n        });\n      }\n\n      return keyboardAnimationConfig;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyboardShow\", function () {\n      _this.setState({\n        keyboard: true\n      }, function () {\n        var _this$_getKeyboardAni = _this._getKeyboardAnimationConfigByType('show'),\n            animation = _this$_getKeyboardAni.animation,\n            config = _this$_getKeyboardAni.config;\n\n        Animated[animation](_this.state.visible, _objectSpread({\n          toValue: 0\n        }, config)).start();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyboardHide\", function () {\n      var _this$_getKeyboardAni2 = _this._getKeyboardAnimationConfigByType('hide'),\n          animation = _this$_getKeyboardAni2.animation,\n          config = _this$_getKeyboardAni2.config;\n\n      Animated[animation](_this.state.visible, _objectSpread({\n        toValue: 1\n      }, config)).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleLayout\", function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      _this.setState({\n        layout: {\n          height: height,\n          width: width\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getActiveTintColor\", function () {\n      var activeTintColor = _this.props.activeTintColor;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getInactiveTintColor\", function () {\n      var inactiveTintColor = _this.props.inactiveTintColor;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getActiveBackgroundColor\", function () {\n      var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getInactiveBackgroundColor\", function () {\n      var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderLabel\", function (_ref) {\n      var route = _ref.route,\n          focused = _ref.focused;\n      var _this$props2 = _this.props,\n          labelStyle = _this$props2.labelStyle,\n          showLabel = _this$props2.showLabel,\n          showIcon = _this$props2.showIcon,\n          allowFontScaling = _this$props2.allowFontScaling;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var label = _this.props.getLabelText({\n        route: route\n      });\n\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          focused: focused,\n          tintColor: tintColor,\n          orientation: horizontal ? 'horizontal' : 'vertical'\n        });\n      }\n\n      return label;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderIcon\", function (_ref2) {\n      var route = _ref2.route,\n          focused = _ref2.focused;\n      var _this$props3 = _this.props,\n          renderIcon = _this$props3.renderIcon,\n          showIcon = _this$props3.showIcon,\n          showLabel = _this$props3.showLabel;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_shouldUseHorizontalLabels\", function () {\n      var routes = _this.props.navigation.state.routes;\n      var _this$props4 = _this.props,\n          isLandscape = _this$props4.isLandscape,\n          dimensions = _this$props4.dimensions,\n          adaptive = _this$props4.adaptive,\n          tabStyle = _this$props4.tabStyle,\n          labelPosition = _this$props4.labelPosition;\n\n      if (labelPosition) {\n        var position;\n\n        if (typeof labelPosition === 'string') {\n          position = labelPosition;\n        } else {\n          position = labelPosition({\n            deviceOrientation: isLandscape ? 'horizontal' : 'vertical'\n          });\n        }\n\n        if (position) {\n          return position === 'beside-icon';\n        }\n      }\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(TabBarBottom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          navigation = _this$props5.navigation,\n          keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,\n          onTabPress = _this$props5.onTabPress,\n          onTabLongPress = _this$props5.onTabLongPress,\n          safeAreaInset = _this$props5.safeAreaInset,\n          style = _this$props5.style,\n          tabStyle = _this$props5.tabStyle;\n      var routes = navigation.state.routes;\n      var isDark = this.context === 'dark';\n\n      var activeBackgroundColor = this._getActiveBackgroundColor();\n\n      var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n      var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n          position = _StyleSheet$flatten.position,\n          top = _StyleSheet$flatten.top,\n          _StyleSheet$flatten$l = _StyleSheet$flatten.left,\n          left = _StyleSheet$flatten$l === void 0 ? 0 : _StyleSheet$flatten$l,\n          _StyleSheet$flatten$b = _StyleSheet$flatten.bottom,\n          bottom = _StyleSheet$flatten$b === void 0 ? 0 : _StyleSheet$flatten$b,\n          _StyleSheet$flatten$r = _StyleSheet$flatten.right,\n          right = _StyleSheet$flatten$r === void 0 ? 0 : _StyleSheet$flatten$r,\n          margin = _StyleSheet$flatten.margin,\n          marginTop = _StyleSheet$flatten.marginTop,\n          marginLeft = _StyleSheet$flatten.marginLeft,\n          marginBottom = _StyleSheet$flatten.marginBottom,\n          marginRight = _StyleSheet$flatten.marginRight,\n          marginHorizontal = _StyleSheet$flatten.marginHorizontal,\n          marginVertical = _StyleSheet$flatten.marginVertical,\n          innerStyle = _objectWithoutProperties(_StyleSheet$flatten, [\"position\", \"top\", \"left\", \"bottom\", \"right\", \"margin\", \"marginTop\", \"marginLeft\", \"marginBottom\", \"marginRight\", \"marginHorizontal\", \"marginVertical\"]);\n\n      var containerStyle = {\n        position: position,\n        top: top,\n        left: left,\n        bottom: bottom,\n        right: right,\n        margin: margin,\n        marginTop: marginTop,\n        marginLeft: marginLeft,\n        marginBottom: marginBottom,\n        marginRight: marginRight,\n        marginHorizontal: marginHorizontal,\n        marginVertical: marginVertical\n      };\n      var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, innerStyle];\n      return React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, keyboardHidesTabBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : position\n        } : null],\n        pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout\n      }, React.createElement(SafeAreaView, {\n        style: tabBarStyle,\n        forceInset: safeAreaInset\n      }, routes.map(function (route, index) {\n        var focused = index === navigation.state.index;\n        var scene = {\n          route: route,\n          focused: focused\n        };\n\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n\n        var accessibilityRole = _this2.props.getAccessibilityRole({\n          route: route\n        });\n\n        var accessibilityStates = _this2.props.getAccessibilityStates(scene);\n\n        var testID = _this2.props.getTestID({\n          route: route\n        });\n\n        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        var ButtonComponent = _this2.props.getButtonComponent({\n          route: route\n        }) || TouchableWithoutFeedbackWrapper;\n        return React.createElement(ButtonComponent, {\n          key: route.key,\n          route: route,\n          focused: focused,\n          onPress: function onPress() {\n            return onTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress({\n              route: route\n            });\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: accessibilityRole,\n          accessibilityStates: accessibilityStates,\n          style: [styles.tab, {\n            backgroundColor: backgroundColor\n          }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle]\n        }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n      })));\n    }\n  }]);\n\n  return TabBarBottom;\n}(React.Component);\n\n_defineProperty(TabBarBottom, \"defaultProps\", {\n  keyboardHidesTabBar: true,\n  keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n});\n\n_defineProperty(TabBarBottom, \"contextType\", ThemeContext);\n\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["majorVersion","parseInt","Platform","isIos","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","DEFAULT_KEYBOARD_ANIMATION_CONFIG","show","animation","config","useNativeDriver","duration","hide","React","accessibilityStates","left","right","top","bottom","TabBarBottom","keyboardHidesTabBar","keyboardHidesTabBarAnimationConfig","activeTintColor","light","dark","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","allowFontScaling","adaptive","safeAreaInset","ThemeContext","layout","height","width","keyboard","visible","Animated","Keyboard","type","defaultKeyboardAnimationConfig","keyboardAnimationConfig","toValue","e","focused","label","route","tintColor","horizontal","styles","color","orientation","activeOpacity","inactiveOpacity","routes","labelPosition","position","deviceOrientation","isLandscape","maxTabItemWidth","flattenedStyle","StyleSheet","dimensions","tabStyle","navigation","isDark","marginVertical","style","containerStyle","margin","marginTop","marginLeft","marginBottom","marginRight","marginHorizontal","tabBarStyle","transform","translateY","inputRange","outputRange","_handleLayout","index","scene","accessibilityLabel","accessibilityRole","testID","backgroundColor","ButtonComponent","onTabPress","onTabLongPress","DEFAULT_HEIGHT","COMPACT_HEIGHT","tabBar","borderTopWidth","flexDirection","tabBarLight","ThemeColors","borderTopColor","headerBorder","tabBarDark","container","elevation","tabBarCompact","tabBarRegular","tab","flex","alignItems","tabPortrait","justifyContent","tabLandscape","iconWithoutLabel","iconWithLabel","iconWithExplicitHeight","textAlign","labelBeneath","fontSize","labelBeside","withDimensions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext, NavigationRoute } from 'react-navigation';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\nimport {\n  BottomTabBarProps,\n  ButtonComponentProps,\n  KeyboardHidesTabBarAnimationConfig,\n  KeyboardAnimationConfig,\n} from '../types';\n\ntype State = {\n  layout: { height: number; width: number };\n  keyboard: boolean;\n  visible: Animated.Value;\n};\n\nconst majorVersion = parseInt(Platform.Version as string, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst DEFAULT_KEYBOARD_ANIMATION_CONFIG: KeyboardHidesTabBarAnimationConfig = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150,\n    },\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100,\n    },\n  },\n};\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<\n  ButtonComponentProps\n> {\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      route,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focused,\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...rest\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...rest} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<BottomTabBarProps, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: true,\n    keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' } as React.ComponentProps<\n      typeof SafeAreaView\n    >['forceInset'],\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  static contextType = ThemeContext;\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  // @ts-ignore\n  context: 'light' | 'dark';\n\n  _getKeyboardAnimationConfigByType = (\n    type: keyof KeyboardHidesTabBarAnimationConfig\n  ): KeyboardAnimationConfig => {\n    const { keyboardHidesTabBarAnimationConfig } = this.props;\n    const defaultKeyboardAnimationConfig =\n      DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n    const keyboardAnimationConfig =\n      keyboardHidesTabBarAnimationConfig?.[type] ||\n      defaultKeyboardAnimationConfig;\n\n    // merge config only `timing` animation\n    if (\n      keyboardAnimationConfig &&\n      keyboardAnimationConfig.animation === 'timing'\n    ) {\n      return {\n        ...defaultKeyboardAnimationConfig,\n        ...keyboardAnimationConfig,\n        config: {\n          ...defaultKeyboardAnimationConfig.config,\n          ...keyboardAnimationConfig.config,\n        },\n      };\n    }\n\n    return keyboardAnimationConfig as KeyboardAnimationConfig;\n  };\n\n  _handleKeyboardShow = () => {\n    this.setState({ keyboard: true }, () => {\n      const { animation, config } = this._getKeyboardAnimationConfigByType(\n        'show'\n      );\n      Animated[animation](this.state.visible, {\n        toValue: 0,\n        ...config,\n      }).start();\n    });\n  };\n\n  _handleKeyboardHide = () => {\n    const { animation, config } = this._getKeyboardAnimationConfigByType(\n      'hide'\n    );\n    Animated[animation](this.state.visible, {\n      toValue: 1,\n      ...config,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n  };\n\n  _handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({\n        focused,\n        tintColor,\n        orientation: horizontal ? 'horizontal' : 'vertical',\n      });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { renderIcon, showIcon, showLabel } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const {\n      isLandscape,\n      dimensions,\n      adaptive,\n      tabStyle,\n      labelPosition,\n    } = this.props;\n\n    if (labelPosition) {\n      let position;\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({\n          deviceOrientation: isLandscape ? 'horizontal' : 'vertical',\n        });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    // @ts-ignore\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const {\n      position,\n      top,\n      left = 0,\n      bottom = 0,\n      right = 0,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n      ...innerStyle\n    } = StyleSheet.flatten(style || {});\n\n    const containerStyle = {\n      position,\n      top,\n      left,\n      bottom,\n      right,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n    };\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      // @ts-ignore\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      innerStyle,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          containerStyle,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : position,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                route={route}\n                focused={focused}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    // @ts-ignore\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}